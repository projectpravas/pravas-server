{"version":3,"file":"static/js/593.8b440500.chunk.js","mappings":"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","sources":["shared/draganddrop/useDnD.ts","shared/yup-validations/tour-validation/initialTour.ts","shared/yup-validations/tour-validation/tourYupValidation.ts","features/admin/pravas/TourImages.tsx","features/admin/pravas/TourAndPackageForm.tsx","features/admin/pravas/tourFormData.ts","../node_modules/@mui/icons-material/AddAPhoto.js","../node_modules/@mui/icons-material/DragIndicator.js"],"sourcesContent":["//drag and drop\r\n\r\nimport { useRef } from \"react\";\r\n\r\nconst useDnD = () => {\r\n  const dragItem: any = useRef();\r\n  const dragItem2: any = useRef();\r\n  const dragOverItem: any = useRef();\r\n  const dragOverItem2: any = useRef();\r\n\r\n  const dragStart = (e: any, position: number) => {\r\n    dragItem.current = position;\r\n    dragItem2.current = position;\r\n    // console.log(e.target.innerHTML);\r\n  };\r\n\r\n  const dragEnter = (e: any, position: number) => {\r\n    dragOverItem.current = position;\r\n    dragOverItem2.current = position;\r\n    // console.log(e.target.innerHTML);\r\n  };\r\n\r\n  const drop = (\r\n    e: any,\r\n    arr1: Array<any>,\r\n    setArr1: Function,\r\n    arr2?: Array<any>,\r\n    setArr2?: Function\r\n  ) => {\r\n    const copyListItems = [...arr1];\r\n    const dragItemContent = copyListItems[dragItem.current];\r\n    copyListItems.splice(dragItem.current, 1);\r\n    copyListItems.splice(dragOverItem.current, 0, dragItemContent);\r\n    dragItem.current = null;\r\n    dragOverItem.current = null;\r\n    setArr1(copyListItems);\r\n    if (arr2 && setArr2) {\r\n      const copyListItems2 = [...arr2];\r\n      const dragItemContent2 = copyListItems2[dragItem2.current];\r\n      copyListItems2.splice(dragItem2.current, 1);\r\n      copyListItems2.splice(dragOverItem2.current, 0, dragItemContent2);\r\n      dragItem2.current = null;\r\n      dragOverItem2.current = null;\r\n      setArr2(copyListItems2);\r\n    }\r\n  };\r\n\r\n  return { dragStart, dragEnter, drop };\r\n};\r\n\r\nexport default useDnD;\r\n","import { array, string } from \"yup\";\r\nimport TourModel from \"../../models/tourModel\";\r\n\r\nconst defineInitialTour = ({\r\n  has_id = false,\r\n  hasTourId = false,\r\n  hasPackageId = false,\r\n  hasTourDate = false,\r\n  hasTitle = false,\r\n  hasCategory = false,\r\n  hasPrice = false,\r\n\r\n  hasDays = false,\r\n  hasNights = false,\r\n\r\n  hasTourType = false,\r\n  hasTourDesc = false,\r\n  hasTourInfo = false,\r\n  hasMaxPersons = false,\r\n  hasParticipants = false,\r\n  hasTourLocation = false,\r\n  hasFeatured = false,\r\n  hasImages = false,\r\n\r\n  hasScheduleDate = false,\r\n  hasDay = false,\r\n  hasPlanTitle = false,\r\n  hasPlanDesc = false,\r\n  hasMeals = false,\r\n\r\n  hasHotels = false,\r\n  hasIncludes = false,\r\n  hasExcludes = false,\r\n  hasTourNotes = false,\r\n\r\n  hasCustomized = false,\r\n  hasTourStatus = false,\r\n  hasPackageStatus = false,\r\n\r\n  hasPravasiId = false,\r\n  hasLiked = false,\r\n  hasComment = false,\r\n}) => {\r\n  const initialTour: TourModel = {};\r\n  const tourPlanObj: any = {};\r\n  const itineraryObj: any = {};\r\n  const feedbackobj: any = {};\r\n\r\n  if (has_id) initialTour._id = \"\";\r\n  if (hasTourId) initialTour.tourId = NaN;\r\n  if (hasPackageId) initialTour.packageId = \"0\";\r\n  if (hasTourDate) initialTour.tourDate = \"\";\r\n  if (hasTitle) initialTour.title = \"\";\r\n  if (hasCategory) initialTour.category = \"\";\r\n  if (hasPrice) initialTour.price = 0;\r\n\r\n  if (hasDays || hasNights) initialTour.duration = { days: 0, nights: 0 };\r\n\r\n  if (hasTourType) initialTour.tourType = [];\r\n  if (hasTourDesc) initialTour.tourDesc = \"\";\r\n  if (hasTourInfo) initialTour.tourInfo = \"\";\r\n  if (hasMaxPersons) initialTour.maxPersons = 0;\r\n  if (hasParticipants) initialTour.participants = [];\r\n  if (hasTourLocation) initialTour.tourLocation = \"\";\r\n  if (hasFeatured) initialTour.featured = false;\r\n  if (hasImages) initialTour.images = [];\r\n\r\n  if (hasScheduleDate) tourPlanObj.scheduleDate = [];\r\n\r\n  if (hasDay) itineraryObj.day = \"\";\r\n  if (hasPlanTitle) itineraryObj.planTitle = \"\";\r\n  if (hasPlanDesc) itineraryObj.planDesc = \"\";\r\n  if (hasMeals)\r\n    itineraryObj.meals = {\r\n      breakfast: false,\r\n      dinner: false,\r\n      lunch: false,\r\n    };\r\n  if (hasDay || hasPlanTitle || hasPlanDesc || hasMeals)\r\n    tourPlanObj.itinerary = [itineraryObj];\r\n\r\n  if (hasHotels) tourPlanObj.hotels = [{ city: \"\", hotelNames: \"\" }];\r\n  if (hasIncludes) tourPlanObj.includes = [{ include: \"\" }];\r\n  if (hasExcludes) tourPlanObj.excludes = [{ exclude: \"\" }];\r\n  if (hasTourNotes) tourPlanObj.tourNotes = [{ note: \"\" }];\r\n\r\n  if (\r\n    hasScheduleDate ||\r\n    hasDay ||\r\n    hasPlanTitle ||\r\n    hasPlanDesc ||\r\n    hasMeals ||\r\n    hasHotels ||\r\n    hasIncludes ||\r\n    hasExcludes ||\r\n    hasTourNotes\r\n  )\r\n    initialTour.tourPlan = tourPlanObj;\r\n\r\n  if (hasCustomized) initialTour.customized = false;\r\n  if (hasTourStatus) initialTour.tourStatus = \"\";\r\n  if (hasPackageStatus) initialTour.packageStatus = \"\";\r\n\r\n  if (hasPravasiId) feedbackobj.pravasiId = \"\";\r\n  if (hasLiked) feedbackobj.liked = false;\r\n  if (hasComment) feedbackobj.comment = \"\";\r\n  if (hasPravasiId || hasLiked || hasComment)\r\n    initialTour.feedbacks = feedbackobj;\r\n\r\n  return initialTour;\r\n};\r\n\r\nexport default defineInitialTour;\r\n","import * as yup from \"yup\";\r\n\r\ninterface TourYupSchemaInterface {\r\n  hasTourId?: boolean;\r\n  hasTitle?: boolean;\r\n  hasCategory?: boolean;\r\n  hasPrice?: boolean;\r\n  hasDays?: boolean;\r\n  hasNights?: boolean;\r\n  hasTourType?: boolean;\r\n  hasTourDesc?: boolean;\r\n  hasTourInfo?: boolean;\r\n  hasMaxPersons?: boolean;\r\n  hasParticipants?: boolean;\r\n  hasTourLocation?: boolean;\r\n  hasTourDate?: boolean;\r\n  hasFeatured?: boolean;\r\n  hasImages?: boolean;\r\n  hasScheduleDate?: boolean;\r\n  hasDay?: boolean;\r\n  hasPlanTitle?: boolean;\r\n  hasPlanDesc?: boolean;\r\n  hasMeals?: boolean;\r\n  hasHotels?: boolean;\r\n  hasCity?: boolean;\r\n  hasHotelNames?: boolean;\r\n  hasIncludes?: boolean;\r\n  hasExcludes?: boolean;\r\n  hasTourNotes?: boolean;\r\n  hasCustomized?: boolean;\r\n  hasTourStatus?: boolean;\r\n  hasPackageStatus?: boolean;\r\n  hasPravasiId?: boolean;\r\n  hasLiked?: boolean;\r\n  hasComment?: boolean;\r\n}\r\n\r\nconst defineTourYupSchema = ({\r\n  hasTourId = false,\r\n  hasTitle = false,\r\n  hasCategory = false,\r\n  hasPrice = false,\r\n\r\n  hasDays = false,\r\n  hasNights = false,\r\n\r\n  hasTourType = false,\r\n  hasTourDesc = false,\r\n  hasTourInfo = false,\r\n  hasTourDate = false,\r\n  hasMaxPersons = false,\r\n  hasParticipants = false,\r\n  hasTourLocation = false,\r\n  hasFeatured = false,\r\n  hasImages = false,\r\n\r\n  hasScheduleDate = false,\r\n  hasDay = false,\r\n  hasPlanTitle = false,\r\n  hasPlanDesc = false,\r\n  hasMeals = false,\r\n\r\n  hasHotels = false,\r\n  hasCity = false,\r\n  hasHotelNames = false,\r\n\r\n  hasIncludes = false,\r\n  hasExcludes = false,\r\n  hasTourNotes = false,\r\n\r\n  hasCustomized = false,\r\n  hasTourStatus = false,\r\n  hasPackageStatus = false,\r\n\r\n  hasPravasiId = false,\r\n  hasLiked = false,\r\n  hasComment = false,\r\n}: TourYupSchemaInterface) => {\r\n  const tourSchemaObj: any = {};\r\n  const durationObj: any = {};\r\n  const itineraryObj: any = {};\r\n  const tourPlanObj: any = {};\r\n  const hotelsObject: any = {};\r\n  const feedbacksObj: any = {};\r\n\r\n  if (hasTourId)\r\n    tourSchemaObj.tourId = yup.number().required(\"Tour-Id is required\");\r\n  if (hasTitle)\r\n    tourSchemaObj.title = yup.string().required(\"Title is required\");\r\n  if (hasTourDate)\r\n    tourSchemaObj.tourDate = yup\r\n      .date()\r\n      .required(\"Tour Date is required\")\r\n      .min(new Date(Date.now()), \"Date couldn't be less than today\");\r\n  if (hasCategory)\r\n    tourSchemaObj.category = yup.string().required(\"Category is required\");\r\n  if (hasPrice)\r\n    tourSchemaObj.price = yup\r\n      .number()\r\n      .required(\"Price is required\")\r\n      .positive(\"-ve/zero Number is not allowed\");\r\n\r\n  if (hasDays)\r\n    durationObj.days = yup\r\n      .number()\r\n      .required(\"Days required\")\r\n      .positive(\"-ve/zero Number is not allowed\")\r\n      .max(30, \"Max 30 day are allowed\");\r\n  if (hasNights)\r\n    durationObj.nights = yup\r\n      .number()\r\n      .required(\"Nights required\")\r\n      .positive(\"-ve/zero Number is not allowed\");\r\n  if (hasDays || hasNights) tourSchemaObj.duration = yup.object(durationObj);\r\n\r\n  if (hasTourType)\r\n    tourSchemaObj.tourType = yup.array().min(1, \"TourType can't be empty\");\r\n  if (hasTourDesc)\r\n    tourSchemaObj.tourDesc = yup\r\n      .string()\r\n      .required(\"Tour Description is required\");\r\n  if (hasTourInfo)\r\n    tourSchemaObj.tourInfo = yup\r\n      .string()\r\n      .required(\"Tour Information is required\");\r\n  if (hasMaxPersons)\r\n    tourSchemaObj.maxPersons = yup\r\n      .number()\r\n      .required(\"Total Seats are required\")\r\n      .positive(\"-ve/zero Number is not allowed\");\r\n  if (hasParticipants)\r\n    tourSchemaObj.participants = yup\r\n      .string()\r\n      .required(\"Total Seats Number is required\");\r\n  if (hasTourLocation)\r\n    tourSchemaObj.tourLocation = yup\r\n      .string()\r\n      .required(\"Tour Loacation is required\");\r\n  if (hasFeatured)\r\n    tourSchemaObj.featured = yup.boolean().required(\"Featured is required\");\r\n  if (hasImages)\r\n    tourSchemaObj.images = yup.array().required(\"Tour Images is required\");\r\n\r\n  if (hasScheduleDate)\r\n    tourPlanObj.scheduleDate = yup\r\n      .array()\r\n      .required(\"Tour Plan Dates are required\");\r\n\r\n  if (hasDay) itineraryObj.day = yup.string().required(\"Day is Required\");\r\n  if (hasPlanTitle)\r\n    itineraryObj.planTitle = yup.string().required(\"Plan Title is Required\");\r\n  if (hasPlanDesc)\r\n    itineraryObj.planDesc = yup\r\n      .string()\r\n      .required(\"Plan Description is Required\");\r\n  if (hasMeals) itineraryObj.meals = yup.object().required(\"Meals is Required\");\r\n  if (hasDay || hasPlanTitle || hasPlanDesc || hasMeals)\r\n    tourPlanObj.itinerary = yup.object(itineraryObj);\r\n\r\n  if (hasHotels)\r\n    tourPlanObj.hotels = yup.array().required(\"Hotels are required\");\r\n  if (hasCity) hotelsObject.city = yup.string().required(\"City is required\");\r\n  if (hasHotelNames)\r\n    hotelsObject.hotelNames = yup.string().required(\"Hotel Names are required\");\r\n  if (hasIncludes)\r\n    tourPlanObj.includes = yup.array().required(\"Includes are required\");\r\n  if (hasExcludes)\r\n    tourPlanObj.excludes = yup.array().required(\"Excludes are required\");\r\n  if (hasTourNotes)\r\n    tourPlanObj.tourNotes = yup.array().required(\"Tour Notes are required\");\r\n\r\n  if (\r\n    hasScheduleDate ||\r\n    hasDay ||\r\n    hasPlanTitle ||\r\n    hasPlanDesc ||\r\n    hasMeals ||\r\n    hasHotels ||\r\n    hasIncludes ||\r\n    hasExcludes ||\r\n    hasTourNotes\r\n  )\r\n    tourSchemaObj.tourPlan = yup.object(tourPlanObj);\r\n\r\n  if (hasCustomized)\r\n    tourSchemaObj.customized = yup.boolean().required(\"Cutomised is required\");\r\n  if (hasTourStatus)\r\n    tourSchemaObj.tourStatus = yup.string().required(\"Tour Status is required\");\r\n  if (hasPackageStatus)\r\n    tourSchemaObj.packageStatus = yup\r\n      .string()\r\n      .required(\"Package Status is required\");\r\n\r\n  if (hasPravasiId)\r\n    feedbacksObj.pravasiId = yup.string().required(\"Pravasi Id is required\");\r\n  if (hasLiked)\r\n    feedbacksObj.liked = yup.boolean().required(\"Tour like is required\");\r\n  if (hasComment)\r\n    feedbacksObj.comment = yup.array().required(\"Tour comment is required\");\r\n  if (hasPravasiId || hasLiked || hasComment)\r\n    tourSchemaObj.feedbacks = yup.object(feedbacksObj);\r\n\r\n  return yup.object().shape(tourSchemaObj);\r\n};\r\n\r\nexport default defineTourYupSchema;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport AddAPhotoIcon from \"@mui/icons-material/AddAPhoto\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport useDnD from \"../../../shared/draganddrop/useDnD\";\r\nconst StyledBox = styled(Box)({\r\n  height: 100,\r\n  backgroundColor: \"#2222\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  margin: 1,\r\n  cursor: \"pointer\",\r\n});\r\n\r\nconst DeleteButton = styled(ClearIcon)({\r\n  fontSize: \"1.2em\",\r\n  borderRadius: \"50%\",\r\n  backgroundColor: \"red\",\r\n  \":&hover\": {\r\n    backgroundColor: \"red\",\r\n  },\r\n});\r\n\r\ninterface IImagesProps {\r\n  [key: string]: any;\r\n  setImages: Function;\r\n  imgs: string[] | any;\r\n}\r\n\r\ninterface IImageState {\r\n  [key: string]: any;\r\n}\r\n\r\nconst AddMoreImages = ({\r\n  handleChange,\r\n  name,\r\n}: {\r\n  handleChange: any;\r\n  name: string;\r\n}) => {\r\n  return (\r\n    <Box>\r\n      <label htmlFor={name}>\r\n        <StyledBox>\r\n          <AddAPhotoIcon fontSize=\"large\" />\r\n        </StyledBox>\r\n      </label>\r\n      <input\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        multiple\r\n        name={name}\r\n        id={name}\r\n        accept=\".png,.jpeg,.jpg,.webp,.svg..jfif\"\r\n        onChange={handleChange}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Images: React.FunctionComponent<IImagesProps> = ({ setImages, imgs }) => {\r\n  const [imagesState, setImagesState] = useState<string[] | any>([]);\r\n  const { dragEnter, dragStart, drop } = useDnD();\r\n\r\n  const setImagesInPackage = (imgArr: File[]) => {\r\n    setImages(imgArr);\r\n  };\r\n\r\n  const handleImageDelete = (i: number) => {\r\n    let fileArray: File[] = imgs;\r\n\r\n    fileArray.splice(i, 1);\r\n\r\n    setImagesInPackage(fileArray.slice(0, 10));\r\n  };\r\n\r\n  const handleImagesChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { files, name } = e?.target;\r\n\r\n    let fileArray: File[] = [];\r\n    fileArray.push(...imgs);\r\n\r\n    if (files)\r\n      for (const file of files) {\r\n        fileArray.push(file);\r\n      }\r\n\r\n    setImagesInPackage(fileArray.slice(0, 10));\r\n  };\r\n\r\n  const convertImagesToBase64 = (fileArr: File[]) => {\r\n    const arr: any[] = Array(Array.isArray(imgs) ? imgs.length : 0);\r\n\r\n    fileArr.forEach((file, i) => {\r\n      (() => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = function () {\r\n          if (Array.isArray(arr)) arr.splice(i, 1, reader.result);\r\n          setImagesState([...arr]);\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n      })();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (imgs?.length == 0) setImagesState([]);\r\n    convertImagesToBase64(imgs);\r\n  }, [imgs]);\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        sx={{\r\n          overflow: \"auto\",\r\n          m: 1,\r\n        }}\r\n      >\r\n        <Grid container spacing={1} sx={{ p: 1, textAlign: \"center\" }}>\r\n          <Grid item xs={12}>\r\n            <h4 style={{ margin: 0, textAlign: \"left\" }}>Images</h4>\r\n          </Grid>\r\n\r\n          {Array.isArray(imagesState) &&\r\n            imagesState.map((img, i) => {\r\n              return (\r\n                <Grid\r\n                  key={img + \"-\" + i}\r\n                  item\r\n                  xs={12}\r\n                  sm={2}\r\n                  sx={{ position: \"relative\", p: 1, cursor: \"grab\" }}\r\n                  draggable\r\n                  onDragStart={(e) => dragStart(e, i)}\r\n                  onDragEnter={(e) => dragEnter(e, i)}\r\n                  onDragEnd={(e) => drop(e, imagesState, setImagesState)}\r\n                  onDragOver={(e) => e.preventDefault()}\r\n                >\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      right: 0,\r\n                    }}\r\n                    onClick={() => handleImageDelete(i)}\r\n                  >\r\n                    <DeleteButton />\r\n                  </IconButton>\r\n                  <Tooltip title=\"Drag to change the image\" followCursor>\r\n                    <img\r\n                      src={img}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        padding: \"2px\",\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n          {imgs?.length < 10 && (\r\n            <Grid item xs={12} sm={2}>\r\n              <Grid item sx={{ height: \"100%\", p: 1 }}>\r\n                <AddMoreImages\r\n                  handleChange={handleImagesChange}\r\n                  name=\"images\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          {imgs?.length <= 0 && (\r\n            <Grid item xs={12} sm={8} alignSelf=\"center\" justifySelf=\"center\">\r\n              <h3\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  color: \"red\",\r\n                  textAlign: \"center\",\r\n                  margin: \"auto\",\r\n                }}\r\n              >\r\n                Images are required\r\n              </h3>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Images;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport useDnD from \"../../../shared/draganddrop/useDnD\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport defineInitialTour from \"../../../shared/yup-validations/tour-validation/initialTour\";\r\nimport defineTourYupSchema from \"../../../shared/yup-validations/tour-validation/tourYupValidation\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Theme, useTheme } from \"@mui/material/styles\";\r\nimport Images from \"./TourImages\";\r\nimport { SelectChangeEvent } from \"@mui/material\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport TourService from \"../../../services/TourService\";\r\nimport { errorToast, successToast } from \"../../../ui/toast/Toast\";\r\nimport { createFD } from \"./tourFormData\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst tourTypes = [\"Adventure\", \"Group\", \"Honeymoon\", \"Trek\", \"Customize\"];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name: string, type: readonly string[], theme: Theme) {\r\n  return {\r\n    fontWeight:\r\n      type?.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\ninterface IPackageFormProps {}\r\n\r\ninterface TourInterface {\r\n  title?: string;\r\n  packageId?: string;\r\n  tourLocation?: string;\r\n  tourType?: string[];\r\n  price?: string;\r\n  duration?: { days: string; nights: string };\r\n  tourDesc?: string;\r\n  tourDate?: string;\r\n  maxPersons?: string;\r\n  featured?: Boolean;\r\n  tourStatus?: string;\r\n  packageStatus?: string;\r\n  category?: string;\r\n}\r\n\r\ninterface ItineraryObj {\r\n  touched?: { title: boolean; desc: boolean };\r\n  day?: number;\r\n  planTitle?: string;\r\n  planDesc?: string;\r\n  meals: {\r\n    breakfast: boolean;\r\n    lunch: boolean;\r\n    dinner: boolean;\r\n  };\r\n}\r\n\r\ninterface IhotelsInterface {\r\n  touched: { city: boolean; hotels: boolean };\r\n  city: string;\r\n  hotelNames: string;\r\n}\r\n\r\ninterface IincludesInterface {\r\n  touched: boolean;\r\n  include: string;\r\n}\r\n\r\ninterface IexcludesInterface {\r\n  touched: boolean;\r\n  exclude: string;\r\n}\r\n\r\ninterface InotesInterface {\r\n  touched: boolean;\r\n  note: string;\r\n}\r\n\r\nconst commnObj = {\r\n  hasTitle: true,\r\n  hasTourLocation: true,\r\n  hasPrice: true,\r\n  hasDays: true,\r\n  hasFeatured: true,\r\n  hasMaxPersons: true,\r\n  hasTourDesc: true,\r\n  hasCity: true,\r\n};\r\n\r\nlet initialTour = defineInitialTour({\r\n  ...commnObj,\r\n  hasCategory: true,\r\n  hasDay: true,\r\n  hasPlanTitle: true,\r\n  hasPlanDesc: true,\r\n  hasMeals: true,\r\n  hasHotels: true,\r\n  hasIncludes: true,\r\n  hasExcludes: true,\r\n  hasTourNotes: true,\r\n});\r\n\r\nconst itineraryItemObj = {\r\n  touched: { title: false, desc: false },\r\n  day: 0,\r\n  planTitle: \"\",\r\n  planDesc: \"\",\r\n  meals: { breakfast: false, dinner: false, lunch: false },\r\n};\r\n\r\nconst hotelItemObj = {\r\n  touched: { city: false, hotels: false },\r\n  city: \"\",\r\n  hotelNames: \"\",\r\n};\r\n\r\nconst includesItemObj = { touched: false, include: \"\" };\r\nconst excludesItemObj = { touched: false, exclude: \"\" };\r\nconst notesItemObj = { touched: false, note: \"\" };\r\n\r\nconst tourItemObj = {\r\n  title: \"\",\r\n  packageId: \"0\",\r\n  tourLocation: \"\",\r\n  tourDate: \"\",\r\n  tourType: [],\r\n  price: \"\",\r\n  duration: { days: \"\", nights: \"\" },\r\n  tourDesc: \"\",\r\n  maxPersons: \"\",\r\n  featured: false,\r\n};\r\n\r\nconst TourAndPackageForm: React.FunctionComponent<IPackageFormProps> = (\r\n  props\r\n) => {\r\n  const { dragEnter, dragStart, drop } = useDnD();\r\n  const [daysArray, setDaysArray] = useState<Array<number>>([]);\r\n  const [dayPlanItems, setDayPlanItems] = useState([itineraryItemObj]);\r\n  const [itinerary, setItinerary] = useState<Array<ItineraryObj>>([\r\n    itineraryItemObj,\r\n  ]);\r\n  const [images, setImages] = useState<string[] | any>([]);\r\n  const [hotels, setHotels] = useState<Array<IhotelsInterface>>([hotelItemObj]);\r\n  const [includes, setIncludes] = useState<Array<IincludesInterface>>([\r\n    includesItemObj,\r\n  ]);\r\n  const [excludes, setExcludes] = useState<Array<IexcludesInterface>>([\r\n    excludesItemObj,\r\n  ]);\r\n  const [tourNotes, setTourNotes] = useState<Array<InotesInterface>>([\r\n    notesItemObj,\r\n  ]);\r\n  const [tour, setTour] = useState<TourInterface>(tourItemObj);\r\n  const [fetchedData, setFetchedData] = useState();\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const category: \"package\" | \"tour\" = pathname.split(\"/\").includes(\"packages\")\r\n    ? \"package\"\r\n    : \"tour\";\r\n\r\n  let tourYupSchema = defineTourYupSchema({\r\n    ...commnObj,\r\n    hasTourDate: category == \"tour\" ? true : false,\r\n  });\r\n\r\n  const tourId = pathname.split(\"/\")[5];\r\n  const operation = pathname.split(\"/\")[6];\r\n\r\n  const theme = useTheme();\r\n\r\n  const daysCount = (day: number, itemArr: any) => {\r\n    const arr = [];\r\n    let dataArr = [];\r\n\r\n    for (let i = 0; i < day; i++) {\r\n      if (i < 30) arr.push(i + 1);\r\n      const title = `planTitle/${i + 1}`;\r\n      const desc = `planDesc/${i + 1}`;\r\n      if (i < 30)\r\n        dataArr.push({\r\n          touched: { title: false, desc: false },\r\n          day: i + 1,\r\n          [title]: \"\",\r\n          [desc]: \"\",\r\n          meals: { breakfast: false, lunch: false, dinner: false },\r\n        });\r\n    }\r\n\r\n    setDaysArray(arr);\r\n    setItinerary(itemArr ? itemArr : dataArr);\r\n  };\r\n\r\n  const handleItinerary = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    day = NaN\r\n  ) => {\r\n    const { name, value, checked } = e?.target;\r\n\r\n    const arr = [...itinerary];\r\n\r\n    if (day) {\r\n      if (name == \"breakfast\") {\r\n        arr[day - 1].meals.breakfast = checked;\r\n      } else if (name == \"lunch\") {\r\n        arr[day - 1].meals.lunch = checked;\r\n      } else if (name == \"dinner\") {\r\n        arr[day - 1].meals.dinner = checked;\r\n      }\r\n      setItinerary([...arr]);\r\n      localStorage.setItem(\"daywisePlan\", JSON.stringify(arr));\r\n    }\r\n\r\n    if (name?.includes(\"planTitle\") || name?.includes(\"planDesc\")) {\r\n      const index = arr?.findIndex((obj) => obj?.hasOwnProperty(name));\r\n\r\n      if (index > -1) arr.splice(index, 1, { ...arr[index], [name]: value });\r\n\r\n      setItinerary([...arr]);\r\n      localStorage.setItem(\"daywisePlan\", JSON.stringify(arr));\r\n    }\r\n  };\r\n\r\n  const handleTour = (\r\n    e: React.ChangeEvent<HTMLInputElement> | SelectChangeEvent<string[]>\r\n  ) => {\r\n    const { name, value } = e?.target;\r\n\r\n    if (name == \"duration.days\") {\r\n      setTour({\r\n        ...tour,\r\n        duration: { days: value as string, nights: String(Number(value) - 1) },\r\n      });\r\n    } else if (name == \"tourType\") {\r\n      setTour({\r\n        ...tour,\r\n        [name]: typeof value === \"string\" ? value.split(\",\") : value,\r\n      });\r\n    } else {\r\n      setTour({ ...tour, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleAddRemove = (tag: string, method: string, i: number) => {\r\n    let arr: any = [];\r\n    if (tag == \"hotels\") {\r\n      arr = [...hotels];\r\n      if (method == \"add\") {\r\n        arr.push({\r\n          touched: { city: false, hotels: false },\r\n          city: \"\",\r\n          hotelNames: \"\",\r\n        });\r\n      } else {\r\n        arr.splice(i, 1);\r\n      }\r\n      setHotels(arr);\r\n    } else if (tag == \"includes\") {\r\n      arr = [...includes];\r\n      if (method == \"add\") {\r\n        arr.push({ touched: false, include: \"\" });\r\n      } else {\r\n        arr.splice(i, 1);\r\n      }\r\n      setIncludes(arr);\r\n    } else if (tag == \"excludes\") {\r\n      arr = [...excludes];\r\n      if (method == \"add\") {\r\n        arr.push({ touched: false, exclude: \"\" });\r\n      } else {\r\n        arr.splice(i, 1);\r\n      }\r\n      setExcludes(arr);\r\n    } else if (tag == \"tourNotes\") {\r\n      arr = [...tourNotes];\r\n      if (method == \"add\") {\r\n        arr.push({ touched: false, note: \"\" });\r\n      } else {\r\n        arr.splice(i, 1);\r\n      }\r\n      setTourNotes(arr);\r\n    }\r\n  };\r\n\r\n  const handleItemChange = (tag: string, e: any, i: number) => {\r\n    const { name, value } = e?.target;\r\n\r\n    let arr: any = [];\r\n    if (tag == \"hotels\") {\r\n      arr = [...hotels];\r\n\r\n      arr[i][name] = value;\r\n      setHotels(arr);\r\n    } else if (tag == \"includes\") {\r\n      arr = [...includes];\r\n      arr[i][name] = value;\r\n      setIncludes(arr);\r\n    } else if (tag == \"excludes\") {\r\n      arr = [...excludes];\r\n      arr[i][name] = value;\r\n      setExcludes(arr);\r\n    } else if (tag == \"tourNotes\") {\r\n      arr = [...tourNotes];\r\n      arr[i][name] = value;\r\n      setTourNotes(arr);\r\n    }\r\n  };\r\n\r\n  const cleanItineraryData = () => {\r\n    let result: any = [];\r\n    let itineraryData: any = JSON.parse(\r\n      localStorage.getItem(\"itineraryData\") as any\r\n    );\r\n\r\n    for (let obj of itineraryData) {\r\n      const dayplan: any = {};\r\n      Object.entries(obj).forEach(([key, value]) => {\r\n        if (key.includes(\"planTitle\")) {\r\n          dayplan.planTitle = value as string;\r\n        } else if (key.includes(\"planDesc\")) {\r\n          dayplan.planDesc = value as string;\r\n        } else if (key.includes(\"meals\")) {\r\n          dayplan.meals = value as string;\r\n        } else if (key.includes(\"day\")) {\r\n          dayplan.day = value as number;\r\n        } else {\r\n          dayplan.touched = value as any;\r\n        }\r\n      });\r\n      result = [...result, dayplan];\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const handleDraft = () => {\r\n    let basicTourData = JSON.parse(\r\n      localStorage.getItem(\"basicTourData\") as any\r\n    );\r\n    let itineraryData = JSON.parse(localStorage.getItem(\"daywisePlan\") as any);\r\n    let hotelsData = JSON.parse(localStorage.getItem(\"hotelsData\") as any);\r\n    let includesData = JSON.parse(localStorage.getItem(\"includesData\") as any);\r\n    let excludesData = JSON.parse(localStorage.getItem(\"excludesData\") as any);\r\n    let notesData = JSON.parse(localStorage.getItem(\"notesData\") as any);\r\n\r\n    itineraryData = Array.isArray(itineraryData)\r\n      ? itineraryData\r\n      : [itineraryItemObj];\r\n\r\n    setTour(basicTourData ? basicTourData : [tourItemObj]);\r\n    setHotels(hotelsData ? hotelsData : [hotelItemObj]);\r\n    setIncludes(includesData ? includesData : [includesItemObj]);\r\n    setExcludes(excludesData ? excludesData : [excludesItemObj]);\r\n    setTourNotes(notesData ? notesData : [notesItemObj]);\r\n    daysCount(itineraryData.length, itineraryData);\r\n\r\n    initialTour = { ...initialTour, ...basicTourData };\r\n  };\r\n\r\n  const setLocalStorage = (data: any) => {\r\n    const tourData: TourInterface = {\r\n      title: data?.title,\r\n      tourLocation: data?.tourLocation,\r\n      tourType: data?.tourType,\r\n      price: data?.price,\r\n      duration: data?.duration,\r\n      tourDesc: data?.tourDesc,\r\n      maxPersons: data?.maxPersons,\r\n      featured: data?.featured,\r\n    };\r\n\r\n    if (data?.packageId) tourData.packageId = data?.packageId;\r\n    if (data?.tourDate) tourData.tourDate = data?.tourDate;\r\n\r\n    setTour(tourData);\r\n\r\n    // set itinerary Data\r\n    let itineraryResult: any = [];\r\n    let day = 1;\r\n\r\n    for (let obj of data?.tourPlan?.itinerary) {\r\n      const title = `planTitle/${day}`;\r\n      const desc = `planDesc/${day}`;\r\n      const dayplan: any = {\r\n        touched: { title: false, desc: false },\r\n      };\r\n      Object.entries(obj).forEach(([key, value]) => {\r\n        if (key.includes(\"planTitle\")) {\r\n          dayplan[title] = value as string;\r\n        } else if (key.includes(\"planDesc\")) {\r\n          dayplan[desc] = value as string;\r\n        } else if (key.includes(\"meals\")) {\r\n          dayplan.meals = value as string;\r\n        } else if (key.includes(\"day\")) {\r\n          dayplan.day = day as number;\r\n        }\r\n      });\r\n      itineraryResult = [...itineraryResult, dayplan];\r\n      day++;\r\n    }\r\n    setItinerary(itineraryResult);\r\n\r\n    // setImages(data?.images);\r\n\r\n    setHotels(data?.tourPlan?.hotels);\r\n    setIncludes(data?.tourPlan?.includes);\r\n    setExcludes(data?.tourPlan?.excludes);\r\n    setTourNotes(data?.tourPlan?.tourNotes);\r\n\r\n    initialTour = { ...initialTour, ...tourData } as any;\r\n  };\r\n\r\n  const getOneTour = (id: string) => {\r\n    TourService.fetchOneTour(id)\r\n      .then((res) => {\r\n        if (category == \"tour\") {\r\n          if (res?.data?.data?.category == \"package\") {\r\n            res.data.data.packageId = tourId;\r\n            res.data.data.tourDate = new Date();\r\n          }\r\n        }\r\n        setLocalStorage(res?.data?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        const msg =\r\n          err?.response?.data?.message || \"Tour data couldn't fetched..\";\r\n        errorToast(\"\");\r\n      });\r\n  };\r\n\r\n  ////////////// local storage set///////////////////\r\n\r\n  useEffect(() => {\r\n    if (category == \"package\") {\r\n      delete tour?.packageId;\r\n    }\r\n    let basicTourData: TourInterface = { ...tour };\r\n\r\n    const basicTourDataString = JSON.stringify(basicTourData);\r\n\r\n    if (JSON.stringify(tourItemObj) != basicTourDataString)\r\n      localStorage.setItem(\"basicTourData\", basicTourDataString);\r\n  }, [tour]);\r\n\r\n  useEffect(() => {\r\n    let itineraryArr = Array.isArray(itinerary)\r\n      ? [...itinerary]\r\n      : [itineraryItemObj];\r\n\r\n    let itineraryData: Array<ItineraryObj> = itineraryArr;\r\n    const itineraryDataString = JSON.stringify(itineraryData);\r\n\r\n    if (JSON.stringify(itineraryItemObj) != itineraryDataString)\r\n      localStorage.setItem(\"itineraryData\", itineraryDataString);\r\n  }, [itinerary]);\r\n\r\n  useEffect(() => {\r\n    let hotelsData: Array<IhotelsInterface> = Array.isArray(hotels)\r\n      ? [...hotels]\r\n      : [hotels];\r\n\r\n    const hotelsDataString = JSON.stringify(hotelsData);\r\n\r\n    if (\r\n      JSON.stringify(hotelItemObj) != hotelsDataString &&\r\n      hotelsData[0]?.city != \"\"\r\n    )\r\n      localStorage.setItem(\"hotelsData\", hotelsDataString);\r\n  }, [hotels]);\r\n\r\n  useEffect(() => {\r\n    let includesData: Array<IincludesInterface> = Array.isArray(includes)\r\n      ? [...includes]\r\n      : [includes];\r\n\r\n    const includesDataString = JSON.stringify(includesData);\r\n\r\n    if (\r\n      JSON.stringify(includesItemObj) != includesDataString &&\r\n      includesData[0]?.include != \"\"\r\n    )\r\n      localStorage.setItem(\"includesData\", includesDataString);\r\n  }, [includes]);\r\n\r\n  useEffect(() => {\r\n    let excludesData: Array<IexcludesInterface> = Array.isArray(excludes)\r\n      ? [...excludes]\r\n      : [excludes];\r\n\r\n    const excludesDataString = JSON.stringify(excludesData);\r\n\r\n    if (\r\n      JSON.stringify(excludesItemObj) != excludesDataString &&\r\n      excludesData[0]?.exclude != \"\"\r\n    )\r\n      localStorage.setItem(\"excludesData\", excludesDataString);\r\n  }, [excludes]);\r\n\r\n  useEffect(() => {\r\n    let notesData: Array<InotesInterface> = Array.isArray(tourNotes)\r\n      ? [...tourNotes]\r\n      : [tourNotes];\r\n\r\n    const notesDataString = JSON.stringify(notesData);\r\n\r\n    if (\r\n      JSON.stringify(notesItemObj) != notesDataString &&\r\n      notesData[0]?.note != \"\"\r\n    )\r\n      localStorage.setItem(\"notesData\", notesDataString);\r\n  }, [tourNotes]);\r\n\r\n  useEffect(() => {\r\n    const result = cleanItineraryData();\r\n    setDayPlanItems(result);\r\n  }, [itinerary]);\r\n\r\n  useEffect(() => {\r\n    if (tourId != \"0\") getOneTour(tourId);\r\n  }, [tourId]);\r\n\r\n  ////////////// local storage set///////////////////\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialTour}\r\n        enableReinitialize\r\n        validationSchema={tourYupSchema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          const tourObj = createFD(images, category, tourId);\r\n\r\n          operation == \"add\"\r\n            ? TourService.createTour(tourObj)\r\n                .then((res) => {\r\n                  const msg =\r\n                    res?.data?.message ||\r\n                    `${\r\n                      category == \"package\" ? \"Package\" : \"Tour\"\r\n                    } created successfully`;\r\n                  successToast(msg, 3000);\r\n\r\n                  localStorage.removeItem(\"basicTourData\");\r\n                  localStorage.removeItem(\"itineraryData\");\r\n                  localStorage.removeItem(\"daywisePlan\");\r\n                  localStorage.removeItem(\"hotelsData\");\r\n                  localStorage.removeItem(\"includesData\");\r\n                  localStorage.removeItem(\"excludesData\");\r\n                  localStorage.removeItem(\"notesData\");\r\n                  resetForm({});\r\n                })\r\n                .catch((err) => {\r\n                  console.error(err);\r\n                  const msg =\r\n                    err?.response?.data?.message ||\r\n                    `${\r\n                      category == \"package\" ? \"Package\" : \"Tour\"\r\n                    } couldn't created successfully`;\r\n                  errorToast(msg);\r\n                })\r\n            : TourService.updateTour(tourId, tourObj)\r\n                .then((res) => {\r\n                  const msg =\r\n                    res?.data?.message ||\r\n                    `${\r\n                      category == \"package\" ? \"Package\" : \"Tour\"\r\n                    } updated successfully`;\r\n                  successToast(msg, 3000);\r\n\r\n                  localStorage.removeItem(\"basicTourData\");\r\n                  localStorage.removeItem(\"itineraryData\");\r\n                  localStorage.removeItem(\"daywisePlan\");\r\n                  localStorage.removeItem(\"hotelsData\");\r\n                  localStorage.removeItem(\"includesData\");\r\n                  localStorage.removeItem(\"excludesData\");\r\n                  localStorage.removeItem(\"notesData\");\r\n                  resetForm({});\r\n                })\r\n                .catch((err) => {\r\n                  console.error(err);\r\n                  const msg =\r\n                    err?.response?.data?.message ||\r\n                    `${\r\n                      category == \"package\" ? \"Package\" : \"Tour\"\r\n                    } couldn't updated successfully`;\r\n                  errorToast(msg);\r\n                });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          isValid,\r\n          errors,\r\n          touched,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n        }) => {\r\n          const durationTouched: any = touched?.duration;\r\n          const durationErrors: any = errors?.duration;\r\n\r\n          return (\r\n            <form onSubmit={handleSubmit}>\r\n              <Box>\r\n                <Grid container justifyContent=\"end\">\r\n                  <Grid>\r\n                    <Button variant=\"contained\" onClick={handleDraft}>\r\n                      Fill Saved Draft\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                {category == \"tour\" &&\r\n                new Date(\r\n                  new Date(`${tour?.tourDate}`).setDate(\r\n                    new Date(`${tour?.tourDate}`).getDate() +\r\n                      Number(`${tour?.duration?.days}`)\r\n                  )\r\n                ) > new Date() ? null : (\r\n                  <Images setImages={setImages} imgs={images} />\r\n                )}\r\n\r\n                {/* //Basic tour plan */}\r\n                <Accordion defaultExpanded sx={{ marginBottom: 1 }}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                    sx={{ backgroundColor: \"#faf5ee\" }}\r\n                  >\r\n                    <Typography>Basic Tour Details</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <Grid\r\n                      container\r\n                      spacing={2}\r\n                      sx={{ justifyContent: \"center\", backgroundColor: \"#fff\" }}\r\n                    >\r\n                      <Grid item xs={12} md={4}>\r\n                        <TextField\r\n                          fullWidth\r\n                          required\r\n                          type=\"text\"\r\n                          size=\"small\"\r\n                          name=\"title\"\r\n                          label=\"Tour Title\"\r\n                          value={tour?.title}\r\n                          onChange={(e: any) => {\r\n                            handleChange(e);\r\n                            handleTour(e);\r\n                          }}\r\n                          autoComplete=\"title\"\r\n                          autoFocus\r\n                          onBlur={handleBlur}\r\n                          error={touched.title && errors.title ? true : false}\r\n                          helperText={\r\n                            touched.title && errors.title ? errors.title : \"\"\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <TextField\r\n                          fullWidth\r\n                          required\r\n                          type=\"text\"\r\n                          size=\"small\"\r\n                          name=\"tourLocation\"\r\n                          label=\"Tour Location\"\r\n                          value={tour?.tourLocation}\r\n                          onChange={(e: any) => {\r\n                            handleChange(e);\r\n                            handleTour(e);\r\n                          }}\r\n                          autoComplete=\"tourLocation\"\r\n                          onBlur={handleBlur}\r\n                          error={\r\n                            touched.tourLocation && errors.tourLocation\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.tourLocation && errors.tourLocation\r\n                              ? errors.tourLocation\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} md={4}>\r\n                        <TextField\r\n                          fullWidth\r\n                          required\r\n                          type=\"text\"\r\n                          size=\"small\"\r\n                          name=\"price\"\r\n                          label=\"Price\"\r\n                          value={tour?.price || \"\"}\r\n                          onChange={(\r\n                            e: React.ChangeEvent<HTMLInputElement>\r\n                          ) => {\r\n                            handleChange(e);\r\n                            handleTour(e);\r\n                          }}\r\n                          autoComplete=\"price\"\r\n                          onBlur={handleBlur}\r\n                          error={touched.price && errors.price ? true : false}\r\n                          helperText={\r\n                            touched.price && errors.price ? errors.price : \"\"\r\n                          }\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} md={4}>\r\n                        <TextField\r\n                          fullWidth\r\n                          required\r\n                          type=\"text\"\r\n                          size=\"small\"\r\n                          name=\"duration.days\"\r\n                          label=\"Days\"\r\n                          value={tour?.duration?.days || \"\"}\r\n                          inputProps={{ max: 30, min: 0 }}\r\n                          onChange={(e: any) => {\r\n                            handleChange(e);\r\n                            daysCount(e?.target?.value, false);\r\n                            handleTour(e);\r\n                          }}\r\n                          autoComplete=\"duration.days\"\r\n                          onBlur={handleBlur}\r\n                          error={\r\n                            durationTouched?.days && durationErrors?.days\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            durationTouched?.days && durationErrors?.days\r\n                              ? durationErrors.days\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <FormControl required size=\"small\" fullWidth>\r\n                          <InputLabel\r\n                            size=\"small\"\r\n                            id=\"demo-simple-select-label\"\r\n                          >\r\n                            Featured\r\n                          </InputLabel>\r\n                          <Select\r\n                            required\r\n                            size=\"small\"\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={tour?.featured}\r\n                            label=\"Featured\"\r\n                            name=\"featured\"\r\n                            onChange={(e: any) => {\r\n                              handleChange(e);\r\n                              handleTour(e);\r\n                            }}\r\n                            autoComplete=\"featured\"\r\n                            onBlur={handleBlur}\r\n                            error={\r\n                              touched.featured && errors.featured ? true : false\r\n                            }\r\n                          >\r\n                            <MenuItem value=\"true\">Yes</MenuItem>\r\n                            <MenuItem value=\"false\">No</MenuItem>\r\n                          </Select>\r\n                          <FormHelperText>\r\n                            {touched.featured && errors.featured\r\n                              ? errors.featured\r\n                              : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={4}>\r\n                        <TextField\r\n                          fullWidth\r\n                          required\r\n                          type=\"text\"\r\n                          size=\"small\"\r\n                          name=\"maxPersons\"\r\n                          label=\"Seats\"\r\n                          value={tour?.maxPersons || \"\"}\r\n                          onChange={(e: any) => {\r\n                            handleChange(e);\r\n                            handleTour(e);\r\n                          }}\r\n                          autoComplete=\"maxPersons\"\r\n                          onBlur={handleBlur}\r\n                          error={\r\n                            touched.maxPersons && errors.maxPersons\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          helperText={\r\n                            touched.maxPersons && errors.maxPersons\r\n                              ? errors.maxPersons\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </Grid>\r\n\r\n                      {category == \"tour\" && (\r\n                        <Grid item xs={12} md={6}>\r\n                          <TextField\r\n                            size=\"small\"\r\n                            fullWidth\r\n                            required\r\n                            id=\"tourDate\"\r\n                            type=\"date\"\r\n                            label=\"Tour Date\"\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                            name=\"tourDate\"\r\n                            value={tour?.tourDate?.toString().split(\"T\")[0]}\r\n                            onBlur={handleBlur}\r\n                            onChange={(e: any) => {\r\n                              handleChange(e);\r\n                              handleTour(e);\r\n                            }}\r\n                            error={\r\n                              touched?.tourDate && errors?.tourDate\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            helperText={\r\n                              touched?.tourDate && errors?.tourDate\r\n                                ? errors?.tourDate\r\n                                : \"\"\r\n                            }\r\n                          />\r\n                        </Grid>\r\n                      )}\r\n\r\n                      <Grid item xs={12} md={category == \"tour\" ? 6 : 12}>\r\n                        <FormControl\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          required\r\n                          error={\r\n                            touched?.tourType &&\r\n                            tour?.tourType &&\r\n                            tour?.tourType?.length <= 0\r\n                              ? true\r\n                              : false\r\n                          }\r\n                        >\r\n                          <InputLabel size=\"small\" id=\"multiple-chip-label\">\r\n                            Type\r\n                          </InputLabel>\r\n                          <Select\r\n                            required\r\n                            size=\"small\"\r\n                            labelId=\"multiple-chip-label\"\r\n                            id=\"TourType\"\r\n                            name=\"tourType\"\r\n                            multiple\r\n                            value={tour?.tourType || []}\r\n                            onBlur={handleBlur}\r\n                            onChange={(e: any) => {\r\n                              handleChange(e);\r\n                              handleTour(e);\r\n                            }}\r\n                            input={\r\n                              <OutlinedInput\r\n                                id=\"select-multiple-chip\"\r\n                                label=\"Chip\"\r\n                                size=\"small\"\r\n                              />\r\n                            }\r\n                            renderValue={(selected) => (\r\n                              <Box\r\n                                sx={{\r\n                                  display: \"flex\",\r\n                                  flexWrap: \"wrap\",\r\n                                  gap: 0.5,\r\n                                }}\r\n                              >\r\n                                {selected.map((value) => (\r\n                                  <Chip\r\n                                    size=\"small\"\r\n                                    key={value}\r\n                                    label={value}\r\n                                  />\r\n                                ))}\r\n                              </Box>\r\n                            )}\r\n                            MenuProps={MenuProps}\r\n                          >\r\n                            {tourTypes.map((type) => (\r\n                              <MenuItem\r\n                                key={type}\r\n                                value={type}\r\n                                style={getStyles(\r\n                                  type,\r\n                                  tour?.tourType as string[],\r\n                                  theme\r\n                                )}\r\n                              >\r\n                                {type}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText>\r\n                            {touched?.tourType &&\r\n                            tour?.tourType &&\r\n                            tour?.tourType?.length <= 0\r\n                              ? \"Tour type can't be empty\"\r\n                              : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          required\r\n                          multiline\r\n                          minRows={5}\r\n                          type=\"text\"\r\n                          name=\"tourDesc\"\r\n                          label=\"Tour Description\"\r\n                          value={tour?.tourDesc}\r\n                          onChange={(e: any) => {\r\n                            handleChange(e);\r\n                            handleTour(e);\r\n                          }}\r\n                          autoComplete=\"tourDesc\"\r\n                          onBlur={handleBlur}\r\n                          error={\r\n                            touched.tourDesc && errors.tourDesc ? true : false\r\n                          }\r\n                          helperText={\r\n                            touched.tourDesc && errors.tourDesc\r\n                              ? errors.tourDesc\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                {/* Tour Plan Day by day */}\r\n                <Accordion sx={{ marginBottom: 1 }}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                    sx={{ backgroundColor: \"#faf5ee\" }}\r\n                  >\r\n                    <Typography>Daywise Tour Plan</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <Grid\r\n                      container\r\n                      spacing={2}\r\n                      sx={{\r\n                        justifyContent: \"space-evenly\",\r\n                        mx: 0,\r\n                        width: \"100%\",\r\n                        backgroundColor: \"#fff\",\r\n                      }}\r\n                    >\r\n                      {tour?.duration?.days &&\r\n                        itinerary.map((v, i) => (\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            md={6}\r\n                            sx={{ padding: 1 }}\r\n                            key={i + 1}\r\n                            draggable\r\n                            onDragStart={(e) => dragStart(e, i)}\r\n                            onDragEnter={(e) => dragEnter(e, i)}\r\n                            onDragEnd={(e) =>\r\n                              drop(\r\n                                e,\r\n                                daysArray,\r\n                                setDaysArray,\r\n                                itinerary,\r\n                                setItinerary\r\n                              )\r\n                            }\r\n                            onDragOver={(e) => e.preventDefault()}\r\n                          >\r\n                            <Grid container justifyContent=\"space-evenly\">\r\n                              <Paper\r\n                                variant=\"elevation\"\r\n                                sx={{\r\n                                  width: \"100%\",\r\n                                  p: 2,\r\n                                }}\r\n                              >\r\n                                <Grid\r\n                                  item\r\n                                  sx={{ padding: 2, cursor: \"grab\" }}\r\n                                  xs={12}\r\n                                >\r\n                                  <Grid\r\n                                    container\r\n                                    justifyContent=\"space-between\"\r\n                                  >\r\n                                    <Typography>Day : {i + 1} </Typography>\r\n                                    <Tooltip\r\n                                      TransitionComponent={Fade}\r\n                                      TransitionProps={{ timeout: 600 }}\r\n                                      title=\"Drag to change the card..\"\r\n                                      placement=\"top\"\r\n                                    >\r\n                                      <DragIndicatorIcon />\r\n                                    </Tooltip>\r\n                                  </Grid>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    required\r\n                                    type=\"text\"\r\n                                    size=\"small\"\r\n                                    margin=\"normal\"\r\n                                    name={`planTitle/${itinerary[i]?.day}`}\r\n                                    label=\"Plan Title\"\r\n                                    value={dayPlanItems[i]?.planTitle}\r\n                                    onChange={handleItinerary}\r\n                                    autoComplete={`planTitle/${daysArray[i]}`}\r\n                                    onBlur={(e) => {\r\n                                      if (!itinerary[i].touched?.title) {\r\n                                        const arr: any = [...itinerary];\r\n                                        arr[i].touched.title = true;\r\n                                        setItinerary([...arr]);\r\n                                      }\r\n                                      handleBlur(e);\r\n                                    }}\r\n                                    error={\r\n                                      !dayPlanItems[i]?.planTitle &&\r\n                                      dayPlanItems[i]?.touched?.title\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                    helperText={\r\n                                      !dayPlanItems[i]?.planTitle &&\r\n                                      dayPlanItems[i]?.touched?.title\r\n                                        ? `Plan Title is required`\r\n                                        : \"\"\r\n                                    }\r\n                                  />\r\n\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    required\r\n                                    multiline\r\n                                    margin=\"normal\"\r\n                                    minRows={2}\r\n                                    type=\"text\"\r\n                                    name={`planDesc/${itinerary[i]?.day}`}\r\n                                    label=\"Plan Description\"\r\n                                    value={dayPlanItems[i]?.planDesc}\r\n                                    onChange={handleItinerary}\r\n                                    onBlur={(e) => {\r\n                                      if (!itinerary[i].touched?.desc) {\r\n                                        const arr: any = [...itinerary];\r\n                                        arr[i].touched.desc = true;\r\n                                        setItinerary([...arr]);\r\n                                      }\r\n                                      handleBlur(e);\r\n                                    }}\r\n                                    error={\r\n                                      !dayPlanItems[i]?.planDesc &&\r\n                                      dayPlanItems[i]?.touched?.desc\r\n                                        ? true\r\n                                        : false\r\n                                    }\r\n                                    helperText={\r\n                                      !dayPlanItems[i]?.planDesc &&\r\n                                      dayPlanItems[i]?.touched?.desc\r\n                                        ? `Plan Description is required`\r\n                                        : \"\"\r\n                                    }\r\n                                  />\r\n                                  <FormGroup\r\n                                    row\r\n                                    onClick={(e: any) =>\r\n                                      handleItinerary(e, i + 1)\r\n                                    }\r\n                                  >\r\n                                    <FormControlLabel\r\n                                      control={\r\n                                        <Checkbox\r\n                                          name=\"breakfast\"\r\n                                          checked={\r\n                                            itinerary[i]?.meals?.breakfast\r\n                                          }\r\n                                        />\r\n                                      }\r\n                                      label=\"Breakfast\"\r\n                                    />\r\n\r\n                                    <FormControlLabel\r\n                                      control={\r\n                                        <Checkbox\r\n                                          name=\"lunch\"\r\n                                          checked={itinerary[i]?.meals?.lunch}\r\n                                        />\r\n                                      }\r\n                                      label=\"Lunch\"\r\n                                    />\r\n\r\n                                    <FormControlLabel\r\n                                      control={\r\n                                        <Checkbox\r\n                                          name=\"dinner\"\r\n                                          checked={itinerary[i]?.meals?.dinner}\r\n                                        />\r\n                                      }\r\n                                      label=\"Dinner\"\r\n                                    />\r\n                                  </FormGroup>\r\n                                </Grid>\r\n                              </Paper>\r\n                            </Grid>\r\n                          </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                {/* hotels */}\r\n\r\n                <Accordion sx={{ marginBottom: 1 }}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                    sx={{ backgroundColor: \"#faf5ee\" }}\r\n                  >\r\n                    <Typography>Hotels</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails sx={{ backgroundColor: \"#fff\" }}>\r\n                    <Grid container spacing={2}>\r\n                      <>\r\n                        {Array.isArray(hotels) &&\r\n                          hotels?.map((hotel, index) => (\r\n                            <React.Fragment key={index}>\r\n                              <Grid item xs={12} md={3}>\r\n                                <TextField\r\n                                  fullWidth\r\n                                  required\r\n                                  size=\"small\"\r\n                                  name=\"city\"\r\n                                  id={`hotels.city${index}`}\r\n                                  label=\"City\"\r\n                                  value={hotel?.city}\r\n                                  onChange={(e: any) =>\r\n                                    handleItemChange(\"hotels\", e, index)\r\n                                  }\r\n                                  onBlur={() => {\r\n                                    if (!hotel?.touched?.city) {\r\n                                      const arr: any = [...hotels];\r\n                                      arr[index].touched.city = true;\r\n                                      setHotels(arr);\r\n                                    }\r\n                                  }}\r\n                                  error={\r\n                                    hotel?.touched?.city && !hotel?.city\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  helperText={\r\n                                    hotel?.touched?.city && !hotel?.city\r\n                                      ? \"Please fill city\"\r\n                                      : \"\"\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={12} md={7}>\r\n                                <TextField\r\n                                  fullWidth\r\n                                  required\r\n                                  size=\"small\"\r\n                                  name=\"hotelNames\"\r\n                                  id=\"hotels.hotelNames\"\r\n                                  label=\"Hotels\"\r\n                                  value={hotel?.hotelNames}\r\n                                  onChange={(e: any) =>\r\n                                    handleItemChange(\"hotels\", e, index)\r\n                                  }\r\n                                  onBlur={() => {\r\n                                    if (!hotel?.touched?.hotels) {\r\n                                      const arr: any = [...hotels];\r\n                                      arr[index].touched.hotels = true;\r\n                                      setHotels(arr);\r\n                                    }\r\n                                  }}\r\n                                  error={\r\n                                    hotel?.touched?.hotels && !hotel?.hotelNames\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  helperText={\r\n                                    hotel?.touched?.hotels && !hotel?.hotelNames\r\n                                      ? \"Please fill Hotel Names\"\r\n                                      : \"\"\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={12} md={2}>\r\n                                <Grid\r\n                                  container\r\n                                  justifyContent={\r\n                                    hotels?.length == index + 1\r\n                                      ? \"space-around\"\r\n                                      : \"start\"\r\n                                  }\r\n                                >\r\n                                  {hotels?.length == index + 1 && (\r\n                                    <Grid\r\n                                      item\r\n                                      xs={12}\r\n                                      md={5}\r\n                                      sx={{ textAlign: \"center\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        color=\"primary\"\r\n                                        onClick={() =>\r\n                                          handleAddRemove(\r\n                                            \"hotels\",\r\n                                            \"add\",\r\n                                            index\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <AddIcon />\r\n                                      </IconButton>\r\n                                    </Grid>\r\n                                  )}\r\n                                  <Grid\r\n                                    item\r\n                                    xs={12}\r\n                                    md={5}\r\n                                    sx={{\r\n                                      textAlign:\r\n                                        index + 1 < hotels?.length\r\n                                          ? \"center\"\r\n                                          : \"start\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      color=\"warning\"\r\n                                      disabled={hotels?.length == 1}\r\n                                      onClick={() =>\r\n                                        handleAddRemove(\r\n                                          \"hotels\",\r\n                                          \"remove\",\r\n                                          index\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <ClearIcon />\r\n                                    </IconButton>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </React.Fragment>\r\n                          ))}\r\n                      </>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                {/* Includes */}\r\n\r\n                <Accordion sx={{ marginBottom: 1 }}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                    sx={{ backgroundColor: \"#faf5ee\" }}\r\n                  >\r\n                    <Typography>Included</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails sx={{ backgroundColor: \"#fff\" }}>\r\n                    <Grid container spacing={2}>\r\n                      <>\r\n                        {Array.isArray(includes) &&\r\n                          includes?.map((include, index) => (\r\n                            <React.Fragment key={index}>\r\n                              <Grid item xs={12} md={10}>\r\n                                <TextField\r\n                                  fullWidth\r\n                                  required\r\n                                  size=\"small\"\r\n                                  name=\"include\"\r\n                                  id=\"include\"\r\n                                  label=\"Include\"\r\n                                  multiline\r\n                                  value={include.include}\r\n                                  onChange={(e: any) =>\r\n                                    handleItemChange(\"includes\", e, index)\r\n                                  }\r\n                                  onBlur={() => {\r\n                                    if (!include?.touched) {\r\n                                      const arr: any = [...includes];\r\n                                      arr[index].touched = true;\r\n                                      setIncludes(arr);\r\n                                    }\r\n                                  }}\r\n                                  error={\r\n                                    include?.touched && !include?.include\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  helperText={\r\n                                    include?.touched && !include?.include\r\n                                      ? \"Please fill include field \"\r\n                                      : \"\"\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12} md={2}>\r\n                                <Grid\r\n                                  container\r\n                                  justifyContent={\r\n                                    includes?.length == index + 1\r\n                                      ? \"space-around\"\r\n                                      : \"start\"\r\n                                  }\r\n                                >\r\n                                  {includes?.length == index + 1 && (\r\n                                    <Grid\r\n                                      item\r\n                                      xs={12}\r\n                                      md={5}\r\n                                      sx={{ textAlign: \"center\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        color=\"primary\"\r\n                                        onClick={() =>\r\n                                          handleAddRemove(\r\n                                            \"includes\",\r\n                                            \"add\",\r\n                                            index\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <AddIcon />\r\n                                      </IconButton>\r\n                                    </Grid>\r\n                                  )}\r\n                                  <Grid\r\n                                    item\r\n                                    xs={12}\r\n                                    md={5}\r\n                                    sx={{\r\n                                      textAlign:\r\n                                        index + 1 < includes?.length\r\n                                          ? \"center\"\r\n                                          : \"start\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      color=\"warning\"\r\n                                      disabled={includes?.length == 1}\r\n                                      onClick={() =>\r\n                                        handleAddRemove(\r\n                                          \"includes\",\r\n                                          \"remove\",\r\n                                          index\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <ClearIcon />\r\n                                    </IconButton>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </React.Fragment>\r\n                          ))}\r\n                      </>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                {/* Exclues */}\r\n\r\n                <Accordion sx={{ marginBottom: 1 }}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                    sx={{ backgroundColor: \"#faf5ee\" }}\r\n                  >\r\n                    <Typography>Excluded</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails sx={{ backgroundColor: \"#fff\" }}>\r\n                    <Grid container spacing={2}>\r\n                      <>\r\n                        {Array.isArray(excludes) &&\r\n                          excludes?.map((exclude, index) => (\r\n                            <React.Fragment key={index}>\r\n                              <Grid item xs={12} md={10}>\r\n                                <TextField\r\n                                  required\r\n                                  fullWidth\r\n                                  size=\"small\"\r\n                                  name=\"exclude\"\r\n                                  id=\"exclude\"\r\n                                  label=\"Exclude\"\r\n                                  multiline\r\n                                  value={exclude.exclude}\r\n                                  onChange={(e: any) =>\r\n                                    handleItemChange(\"excludes\", e, index)\r\n                                  }\r\n                                  onBlur={() => {\r\n                                    if (!exclude?.touched) {\r\n                                      const arr: any = [...excludes];\r\n                                      arr[index].touched = true;\r\n                                      setExcludes(arr);\r\n                                    }\r\n                                  }}\r\n                                  error={\r\n                                    exclude?.touched && !exclude?.exclude\r\n                                      ? true\r\n                                      : false\r\n                                  }\r\n                                  helperText={\r\n                                    exclude?.touched && !exclude?.exclude\r\n                                      ? \"Please fill exclude field \"\r\n                                      : \"\"\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12} md={2}>\r\n                                <Grid\r\n                                  container\r\n                                  justifyContent={\r\n                                    excludes?.length == index + 1\r\n                                      ? \"space-around\"\r\n                                      : \"start\"\r\n                                  }\r\n                                >\r\n                                  {excludes?.length == index + 1 && (\r\n                                    <Grid\r\n                                      item\r\n                                      xs={12}\r\n                                      md={5}\r\n                                      sx={{ textAlign: \"center\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        color=\"primary\"\r\n                                        onClick={() =>\r\n                                          handleAddRemove(\r\n                                            \"excludes\",\r\n                                            \"add\",\r\n                                            index\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <AddIcon />\r\n                                      </IconButton>\r\n                                    </Grid>\r\n                                  )}\r\n                                  <Grid\r\n                                    item\r\n                                    xs={12}\r\n                                    md={5}\r\n                                    sx={{\r\n                                      textAlign:\r\n                                        index + 1 < excludes?.length\r\n                                          ? \"center\"\r\n                                          : \"start\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      color=\"warning\"\r\n                                      disabled={excludes?.length == 1}\r\n                                      onClick={() =>\r\n                                        handleAddRemove(\r\n                                          \"excludes\",\r\n                                          \"remove\",\r\n                                          index\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <ClearIcon />\r\n                                    </IconButton>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </React.Fragment>\r\n                          ))}\r\n                      </>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                {/* Notes */}\r\n\r\n                <Accordion sx={{ marginBottom: 1 }}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                    sx={{ backgroundColor: \"#faf5ee\" }}\r\n                  >\r\n                    <Typography>Notes</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails sx={{ backgroundColor: \"#fff\" }}>\r\n                    <Grid container spacing={2}>\r\n                      <>\r\n                        {Array.isArray(tourNotes) &&\r\n                          tourNotes?.map((note, index) => (\r\n                            <React.Fragment key={index}>\r\n                              <Grid item xs={12} md={10}>\r\n                                <TextField\r\n                                  required\r\n                                  fullWidth\r\n                                  size=\"small\"\r\n                                  name=\"note\"\r\n                                  id=\"note\"\r\n                                  label=\"Note\"\r\n                                  multiline\r\n                                  value={note.note}\r\n                                  onChange={(e: any) =>\r\n                                    handleItemChange(\"tourNotes\", e, index)\r\n                                  }\r\n                                  onBlur={() => {\r\n                                    if (!note?.touched) {\r\n                                      const arr: any = [...tourNotes];\r\n                                      arr[index].touched = true;\r\n                                      setTourNotes(arr);\r\n                                    }\r\n                                  }}\r\n                                  error={\r\n                                    note?.touched && !note?.note ? true : false\r\n                                  }\r\n                                  helperText={\r\n                                    note?.touched && !note?.note\r\n                                      ? \"Please fill note\"\r\n                                      : \"\"\r\n                                  }\r\n                                />\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12} md={2}>\r\n                                <Grid\r\n                                  container\r\n                                  justifyContent={\r\n                                    tourNotes?.length == index + 1\r\n                                      ? \"space-around\"\r\n                                      : \"start\"\r\n                                  }\r\n                                >\r\n                                  {tourNotes?.length == index + 1 && (\r\n                                    <Grid\r\n                                      item\r\n                                      xs={12}\r\n                                      md={5}\r\n                                      sx={{ textAlign: \"center\" }}\r\n                                    >\r\n                                      <IconButton\r\n                                        color=\"primary\"\r\n                                        onClick={() =>\r\n                                          handleAddRemove(\r\n                                            \"tourNotes\",\r\n                                            \"add\",\r\n                                            index\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <AddIcon />\r\n                                      </IconButton>\r\n                                    </Grid>\r\n                                  )}\r\n                                  <Grid\r\n                                    item\r\n                                    xs={12}\r\n                                    md={5}\r\n                                    sx={{\r\n                                      textAlign:\r\n                                        index + 1 < tourNotes?.length\r\n                                          ? \"center\"\r\n                                          : \"start\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      color=\"warning\"\r\n                                      disabled={tourNotes?.length == 1}\r\n                                      onClick={() =>\r\n                                        handleAddRemove(\r\n                                          \"tourNotes\",\r\n                                          \"remove\",\r\n                                          index\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <ClearIcon />\r\n                                    </IconButton>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </React.Fragment>\r\n                          ))}\r\n                      </>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Grid container justifyContent=\"center\" sx={{ m: 2 }}>\r\n                  <Box\r\n                    component=\"span\"\r\n                    sx={{\r\n                      cursor:\r\n                        category == \"package\"\r\n                          ? isValid && images?.length > 0\r\n                            ? \"dafault\"\r\n                            : \"not-allowed\"\r\n                          : isValid\r\n                          ? \"default\"\r\n                          : \"not-allowed\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      disabled={\r\n                        category == \"package\"\r\n                          ? isValid && images?.length > 0\r\n                            ? false\r\n                            : true\r\n                          : isValid\r\n                          ? false\r\n                          : true\r\n                      }\r\n                      sx={{\r\n                        m: 1,\r\n                      }}\r\n                      type=\"submit\"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Box>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TourAndPackageForm;\r\n","import TourModel from \"../../../shared/models/tourModel\";\r\n\r\nexport const createFD = (\r\n  images: string[] | any,\r\n  category: \"tour\" | \"package\",\r\n  tourId: string\r\n) => {\r\n  // get values from the localStorage\r\n  let basicTourData = JSON.parse(localStorage.getItem(\"basicTourData\") as any);\r\n  let tourPlanData: any = {};\r\n  let itineraryData = JSON.parse(localStorage.getItem(\"itineraryData\") as any);\r\n  let hotelsData = JSON.parse(localStorage.getItem(\"hotelsData\") as any);\r\n  let includesData = JSON.parse(localStorage.getItem(\"includesData\") as any);\r\n  let excludesData = JSON.parse(localStorage.getItem(\"excludesData\") as any);\r\n  let notesData = JSON.parse(localStorage.getItem(\"notesData\") as any);\r\n\r\n  // Clear unwanted fields and restucture data to create FormData\r\n  //  set basicTourData\r\n  basicTourData.images = images;\r\n  basicTourData.category = category;\r\n  if (category == \"package\") basicTourData.packageStatus = \"active\";\r\n  if (category == \"tour\") {\r\n    basicTourData.packageId = tourId;\r\n  } else {\r\n    delete basicTourData?.packageId;\r\n    delete basicTourData?.tourDate;\r\n  }\r\n\r\n  basicTourData.customized = basicTourData?.tourType?.includes(\"Customize\");\r\n\r\n  // Set Day by day data to state\r\n\r\n  let itineraryResult: any = [];\r\n  let day = 1;\r\n\r\n  for (let obj of itineraryData) {\r\n    const dayplan: any = {};\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      if (key.includes(\"planTitle\")) {\r\n        dayplan.planTitle = value as string;\r\n      } else if (key.includes(\"planDesc\")) {\r\n        dayplan.planDesc = value as string;\r\n      } else if (key.includes(\"meals\")) {\r\n        dayplan.meals = value as string;\r\n      } else if (key.includes(\"day\")) {\r\n        dayplan.day = day as number;\r\n      }\r\n    });\r\n    itineraryResult = [...itineraryResult, dayplan];\r\n    day++;\r\n  }\r\n  itineraryData = itineraryResult;\r\n\r\n  /// hotels data\r\n  let hotelsResult: any = [];\r\n\r\n  for (let obj of hotelsData) {\r\n    const dayplan: any = {};\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      if (key.includes(\"city\")) {\r\n        dayplan.city = value as string;\r\n      } else if (key.includes(\"hotelNames\")) {\r\n        dayplan.hotelNames = value as string;\r\n      }\r\n    });\r\n    hotelsResult = [...hotelsResult, dayplan];\r\n  }\r\n  hotelsData = hotelsResult;\r\n\r\n  /// includes data\r\n  let includesResult: any = [];\r\n\r\n  for (let obj of includesData) {\r\n    const dayplan: any = {};\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      if (key.includes(\"include\")) {\r\n        dayplan.include = value as string;\r\n      }\r\n    });\r\n    includesResult = [...includesResult, dayplan];\r\n  }\r\n  includesData = includesResult;\r\n\r\n  /// excludes data\r\n  let excludesResult: any = [];\r\n\r\n  for (let obj of excludesData) {\r\n    const dayplan: any = {};\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      if (key.includes(\"exclude\")) {\r\n        dayplan.exclude = value as string;\r\n      }\r\n    });\r\n    excludesResult = [...excludesResult, dayplan];\r\n  }\r\n  excludesData = excludesResult;\r\n\r\n  /// Notes data\r\n  let notesResult: any = [];\r\n\r\n  for (let obj of notesData) {\r\n    const dayplan: any = {};\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      if (key.includes(\"note\")) {\r\n        dayplan.note = value as string;\r\n      }\r\n    });\r\n    notesResult = [...notesResult, dayplan];\r\n  }\r\n  notesData = notesResult;\r\n\r\n  ////////////////// Final data  //////////////\r\n\r\n  tourPlanData = {\r\n    itinerary: itineraryData,\r\n    hotels: hotelsData,\r\n    includes: includesData,\r\n    excludes: excludesData,\r\n    tourNotes: notesData,\r\n  };\r\n\r\n  const tourObj: TourModel = {\r\n    ...basicTourData,\r\n    tourPlan: tourPlanData,\r\n  };\r\n\r\n  /////////////////////////////////////\r\n  const fd = new FormData();\r\n\r\n  //append data Fields\r\n  tourObj?.title && fd.append(\"title\", tourObj?.title);\r\n  tourObj?.category && fd.append(\"category\", tourObj?.category);\r\n  tourObj?.packageStatus && fd.append(\"packageStatus\", tourObj?.packageStatus);\r\n  tourObj?.price && fd.append(\"price\", tourObj?.price as any);\r\n  tourObj?.customized && fd.append(\"customized\", tourObj?.customized as any);\r\n  tourObj?.tourStatus && fd.append(\"tourStatus\", tourObj?.tourStatus as any);\r\n\r\n  tourObj?.tourDate && fd.append(\"tourDate\", tourObj?.tourDate as string);\r\n  tourObj?.packageId && fd.append(\"packageId\", tourObj?.packageId as string);\r\n\r\n  if (tourObj?.duration) {\r\n    fd.append(\"duration\", JSON.stringify(tourObj?.duration) as string);\r\n  }\r\n\r\n  if (tourObj?.tourType && Array.isArray(tourObj?.tourType)) {\r\n    for (const obj of tourObj?.tourType) {\r\n      fd.append(\"tourType\", obj as any);\r\n    }\r\n  }\r\n\r\n  tourObj?.tourDesc && fd.append(\"tourDesc\", tourObj?.tourDesc);\r\n\r\n  tourObj?.tourInfo && fd.append(\"tourInfo\", tourObj?.tourInfo);\r\n  tourObj?.maxPersons && fd.append(\"maxPersons\", tourObj?.maxPersons as any);\r\n\r\n  tourObj?.participants &&\r\n    fd.append(\"participants\", tourObj?.participants as any);\r\n\r\n  tourObj?.tourLocation &&\r\n    fd.append(\"tourLocation\", tourObj?.tourLocation as any);\r\n\r\n  tourObj?.featured != undefined &&\r\n    fd.append(\"featured\", tourObj?.featured as any);\r\n\r\n  if (Array.isArray(tourObj?.images)) {\r\n    for (const file of tourObj?.images) {\r\n      fd.append(\"images\", file);\r\n    }\r\n  }\r\n\r\n  tourObj?.feedbacks &&\r\n    fd.append(\"feedbacks\", JSON.stringify(tourObj?.feedbacks) as string);\r\n\r\n  // tourPlan object\r\n  if (tourObj?.tourPlan) {\r\n    fd.append(\"tourPlan\", JSON.stringify(tourObj?.tourPlan) as string);\r\n  }\r\n\r\n  return fd;\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 4V1h2v3h3v2H5v3H3V6H0V4h3zm3 6V7h3V4h7l1.83 2H21c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2V10h3zm7 9c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-3.2-5c0 1.77 1.43 3.2 3.2 3.2s3.2-1.43 3.2-3.2-1.43-3.2-3.2-3.2-3.2 1.43-3.2 3.2z\"\n}), 'AddAPhoto');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'DragIndicator');\nexports.default = _default;"],"names":["dragItem","useRef","dragItem2","dragOverItem","dragOverItem2","dragStart","e","position","current","dragEnter","drop","arr1","setArr1","arr2","setArr2","copyListItems","dragItemContent","splice","copyListItems2","dragItemContent2","has_id","hasTourId","hasPackageId","hasTourDate","hasTitle","hasCategory","hasPrice","hasDays","hasNights","hasTourType","hasTourDesc","hasTourInfo","hasMaxPersons","hasParticipants","hasTourLocation","hasFeatured","hasImages","hasScheduleDate","hasDay","hasPlanTitle","hasPlanDesc","hasMeals","hasHotels","hasIncludes","hasExcludes","hasTourNotes","hasCustomized","hasTourStatus","hasPackageStatus","hasPravasiId","hasLiked","hasComment","initialTour","tourPlanObj","itineraryObj","feedbackobj","_id","tourId","NaN","packageId","tourDate","title","category","price","duration","days","nights","tourType","tourDesc","tourInfo","maxPersons","participants","tourLocation","featured","images","scheduleDate","day","planTitle","planDesc","meals","breakfast","dinner","lunch","itinerary","hotels","city","hotelNames","includes","include","excludes","exclude","tourNotes","note","tourPlan","customized","tourStatus","packageStatus","pravasiId","liked","comment","feedbacks","hasCity","hasHotelNames","tourSchemaObj","durationObj","hotelsObject","feedbacksObj","yup","required","min","Date","now","positive","max","shape","StyledBox","styled","Box","height","backgroundColor","display","justifyContent","alignItems","margin","cursor","DeleteButton","ClearIcon","fontSize","borderRadius","AddMoreImages","handleChange","name","htmlFor","AddAPhoto","style","type","multiple","id","accept","onChange","setImages","imgs","useState","imagesState","setImagesState","useDnD","setImagesInPackage","imgArr","useEffect","length","fileArr","arr","Array","isArray","forEach","file","i","reader","FileReader","onload","result","readAsDataURL","convertImagesToBase64","Paper","sx","overflow","m","Grid","container","spacing","p","textAlign","item","xs","map","img","sm","draggable","onDragStart","onDragEnter","onDragEnd","onDragOver","preventDefault","IconButton","size","top","right","onClick","fileArray","slice","handleImageDelete","Tooltip","followCursor","src","width","padding","target","files","push","alignSelf","justifySelf","color","tourTypes","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","getStyles","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","commnObj","defineInitialTour","itineraryItemObj","touched","desc","hotelItemObj","includesItemObj","excludesItemObj","notesItemObj","tourItemObj","props","daysArray","setDaysArray","dayPlanItems","setDayPlanItems","setItinerary","setHotels","setIncludes","setExcludes","setTourNotes","tour","setTour","pathname","useLocation","split","tourYupSchema","defineTourYupSchema","operation","useTheme","daysCount","itemArr","dataArr","handleItinerary","value","checked","localStorage","setItem","JSON","stringify","index","findIndex","obj","hasOwnProperty","handleTour","String","Number","handleAddRemove","tag","method","handleItemChange","handleDraft","basicTourData","parse","getItem","itineraryData","hotelsData","includesData","excludesData","notesData","getOneTour","TourService","then","res","data","tourData","itineraryResult","dayplan","Object","entries","key","setLocalStorage","catch","err","console","error","response","message","errorToast","basicTourDataString","itineraryDataString","hotelsDataString","includesDataString","excludesDataString","notesDataString","cleanItineraryData","initialValues","enableReinitialize","validationSchema","onSubmit","values","resetForm","tourObj","tourPlanData","hotelsResult","includesResult","excludesResult","notesResult","fd","FormData","append","undefined","createFD","msg","successToast","removeItem","isValid","errors","handleBlur","handleSubmit","durationTouched","durationErrors","Button","variant","setDate","getDate","Accordion","defaultExpanded","marginBottom","AccordionSummary","expandIcon","ExpandMore","Typography","AccordionDetails","md","TextField","fullWidth","label","autoComplete","autoFocus","onBlur","helperText","inputProps","FormControl","InputLabel","Select","labelId","MenuItem","FormHelperText","InputLabelProps","shrink","toString","input","OutlinedInput","renderValue","selected","flexWrap","gap","Chip","multiline","minRows","mx","v","TransitionComponent","Fade","TransitionProps","timeout","placement","DragIndicator","FormGroup","row","FormControlLabel","control","Checkbox","hotel","Add","disabled","Clear","component","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}