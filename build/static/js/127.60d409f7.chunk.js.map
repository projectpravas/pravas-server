{"version":3,"file":"static/js/127.60d409f7.chunk.js","mappings":"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","sources":["ui/footer/Career/CareerData.ts","ui/footer/Career/CareerForm.tsx"],"sourcesContent":["export const careerDetails = [\r\n  {\r\n    id: 1,\r\n    jobTitle: \"Tour Lead\",\r\n    jobLocation: \"Pune\",\r\n    lowerSalary: \"12K\",\r\n    higherSalary: \"14K\",\r\n    tags: [\"Full Time\", \"Design\", \"Remote\"],\r\n    jobDesc:\r\n      \"UI/UX Designer responsibilities include gathering user requirements, designing graphic elements and building navigation components. To be successful in this role, you should have experience with design software and wireframe tools. If you also have a portfolio of professional design projects that includes work with web/mobile applications, we’d like to meet you.\",\r\n    companyDesc:\r\n      \"Pravas has an enthusiastic, passionate team who are delivering ‘out-of-the-world’ travel experiences. They are playing a pivotal role in finding and managing tours at some of the most beautiful domestic as well as international locations.\",\r\n    benefits:\r\n      \"Our primary focus is on cherishing the small moments like – the haunting tunes of a local song, the enticing smells of a spice market, the sunset during a jungle safari or the brilliant light of a thousand diyas at a temple. We always find something new and different to offer in terms of heritage, architecture, and experience. We take you to the quiet place where you can breathe fresh, spend quality time, and revive your energy to grow further. We are focused to give all these treasures all in one tour.\",\r\n  },\r\n  {\r\n    id: 2,\r\n    jobTitle: \"WordPress Developer\",\r\n    jobLocation: \"Pune\",\r\n    lowerSalary: \"12K\",\r\n    higherSalary: \"14K\",\r\n    tags: [\"FullTime\", \"Design\", \"Remote\"],\r\n    jobDesc:\r\n      \"UI/UX Designer responsibilities include gathering user requirements, designing graphic elements and building navigation components. To be successful in this role, you should have experience with design software and wireframe tools. If you also have a portfolio of professional design projects that includes work with web/mobile applications, we’d like to meet you.\",\r\n    companyDesc:\r\n      \"Pravas has an enthusiastic, passionate team who are delivering ‘out-of-the-world’ travel experiences. They are playing a pivotal role in finding and managing tours at some of the most beautiful domestic as well as international locations.\",\r\n    benefits:\r\n      \"Our primary focus is on cherishing the small moments like – the haunting tunes of a local song, the enticing smells of a spice market, the sunset during a jungle safari or the brilliant light of a thousand diyas at a temple. We always find something new and different to offer in terms of heritage, architecture, and experience. We take you to the quiet place where you can breathe fresh, spend quality time, and revive your energy to grow further. We are focused to give all these treasures all in one tour.\",\r\n  },\r\n];\r\n","import * as React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { careerDetails } from \"./CareerData\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Formik, Form, FormikProps } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\n\r\nconst TextFieldDesign = styled(TextField)({\r\n  margin: \"10px\",\r\n  width: \"300px\",\r\n});\r\n\r\n// ************validation of application form*****************\r\n\r\nconst validationAppSchema = yup.object().shape({\r\n  firstName: yup\r\n    .string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .matches(/^[A-Za-z ]*$/, \"enter  only Alphabates\")\r\n    .required(\"First Name is required\"),\r\n  lastName: yup\r\n    .string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .matches(/^[A-Za-z ]*$/, \"enter the only Alphabates\")\r\n    .required(\"LastName is required\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email\")\r\n    .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,6}$/, \"Enter valid Email Address\")\r\n    .required(\"Required\"),\r\n  mobile: yup\r\n    .string()\r\n    .min(10, \"too short\")\r\n    .max(10, \"too long\")\r\n    .matches(\r\n      /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,\r\n      \"Enter Valid Mobile number\"\r\n    )\r\n    .required(\"Required\"),\r\n\r\n  age: yup.number().required(\"required\"),\r\n  gender: yup.string().required(\"equired\"),\r\n  qualification: yup.string().required(\"Enter valid Qualification\"),\r\n  experience: yup.number().required(\"Experience in year\"),\r\n});\r\n\r\ninterface MyFormValues {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  qualification: string;\r\n  experience: string;\r\n  mobile: string;\r\n  age: string;\r\n\r\n  gender: any;\r\n}\r\n\r\nconst CareerForm: React.FunctionComponent<{}> = () => {\r\n  const [fomrData, setFormData] = React.useState([]);\r\n\r\n  const { id } = useParams();\r\n\r\n  const singleCareerData = careerDetails.find((obj) => obj?.id == Number(id));\r\n\r\n  const initialValues: MyFormValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    mobile: \"\",\r\n    email: \"\",\r\n    qualification: \"\",\r\n    experience: \"\",\r\n    age: \"\",\r\n    gender: \"\",\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      sx={{\r\n        d: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        margin: \"50px 0\",\r\n      }}\r\n    >\r\n      <Box sx={{ marginBottom: \"30px\" }}>\r\n        <Typography\r\n          variant=\"h5\"\r\n          sx={{\r\n            color: \"#27488D\",\r\n            fontFamily: \"Sans-serif\",\r\n            fontSize: \" 22px\",\r\n            fontWeight: \"750\",\r\n            height: \"30px\",\r\n            margin: \"10px 0\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Job Application Form\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h5\"\r\n          sx={{\r\n            color: \"#27488D\",\r\n            fontFamily: \"Sans-serif\",\r\n            height: \"30px\",\r\n            textAlign: \"center\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        >\r\n          <b> Job Title-</b> {singleCareerData?.jobTitle}\r\n        </Typography>\r\n        <Typography\r\n          sx={{\r\n            color: \"#27488D\",\r\n            fontFamily: \"Sans-serif\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          Please Fill Out the Form Below to Submit Your Job Application!\r\n        </Typography>\r\n      </Box>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationAppSchema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          console.log(\"values:\", values);\r\n\r\n          resetForm({ values: initialValues });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          touched,\r\n          errors,\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n        }) => {\r\n          return (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Grid sx={{ margin: { xs: \"auto\" } }}>\r\n                {/* *************lastand first name section***************** */}\r\n                <Grid item sx={{ m: 2 }}>\r\n                  <TextFieldDesign\r\n                    name=\"firstName\"\r\n                    id=\"firstName\"\r\n                    type=\"text\"\r\n                    label=\"First Name\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={\r\n                      touched?.firstName && errors?.firstName ? true : false\r\n                    }\r\n                    helperText={\r\n                      touched?.firstName && errors?.firstName\r\n                        ? errors?.firstName\r\n                        : \"\"\r\n                    }\r\n                  />\r\n                  <TextFieldDesign\r\n                    name=\"lastName\"\r\n                    id=\"lastName\"\r\n                    type=\"text\"\r\n                    label=\"Last Name\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched?.lastName && errors?.lastName ? true : false}\r\n                    helperText={\r\n                      touched?.firstName && errors?.firstName\r\n                        ? errors?.firstName\r\n                        : \"\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n                {/* *********************mobile and email section******* */}\r\n                <Grid item sx={{ m: 2 }}>\r\n                  <TextFieldDesign\r\n                    name=\"mobile\"\r\n                    id=\"mobile\"\r\n                    type=\"text\"\r\n                    label=\"Mobile Number\"\r\n                    value={values.mobile}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched?.mobile && errors?.mobile ? true : false}\r\n                    helperText={\r\n                      touched?.mobile && errors?.mobile ? errors?.mobile : \"\"\r\n                    }\r\n                  />\r\n                  <TextFieldDesign\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched?.email && errors?.email ? true : false}\r\n                    helperText={\r\n                      touched?.email && errors?.email ? errors?.email : \"\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n                {/* ************qualification and Total experience*************** */}\r\n                <Grid item sx={{ m: 2 }}>\r\n                  <TextFieldDesign\r\n                    name=\"qualification\"\r\n                    id=\"qualification\"\r\n                    type=\"text\"\r\n                    label=\"Qualification\"\r\n                    value={values.qualification}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={\r\n                      touched?.qualification && errors?.qualification\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    helperText={\r\n                      touched?.qualification && errors?.qualification\r\n                        ? errors?.qualification\r\n                        : \"\"\r\n                    }\r\n                  />\r\n                  <TextFieldDesign\r\n                    name=\"experience\"\r\n                    id=\"experience\"\r\n                    type=\"experience\"\r\n                    label=\"Total Experience in year\"\r\n                    value={values.experience}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={\r\n                      touched?.experience && errors?.experience ? true : false\r\n                    }\r\n                    helperText={\r\n                      touched?.experience && errors?.experience\r\n                        ? errors?.experience\r\n                        : \"\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n                {/* ********************age and gender******************* */}\r\n                <Grid item sx={{ m: 2 }}>\r\n                  <TextFieldDesign\r\n                    name=\"age\"\r\n                    id=\"age\"\r\n                    type=\"number\"\r\n                    label=\"Age\"\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched?.age && errors?.age ? true : false}\r\n                    helperText={touched?.age && errors?.age ? errors?.age : \"\"}\r\n                  />\r\n                  <FormControl\r\n                    sx={{\r\n                      m: 1.5,\r\n                      border: \"1px solid #c4c4c4\",\r\n                      paddingLeft: \"2px\",\r\n                      width: \"295px\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                  >\r\n                    <FormLabel id=\"gender\" sx={{ color: \"#919191\", m: 1 }}>\r\n                      Gender\r\n                    </FormLabel>\r\n                    <RadioGroup\r\n                      row\r\n                      name=\"gender\"\r\n                      sx={{ ml: 1 }}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    >\r\n                      <FormControlLabel\r\n                        sx={{ color: \"#919191\" }}\r\n                        value=\"female\"\r\n                        control={<Radio />}\r\n                        label=\"Female\"\r\n                      />\r\n                      <FormControlLabel\r\n                        sx={{ color: \"#919191\" }}\r\n                        value=\"male\"\r\n                        control={<Radio />}\r\n                        label=\"Male\"\r\n                      />\r\n                      <FormControlLabel\r\n                        sx={{ color: \"#919191\" }}\r\n                        value=\"other\"\r\n                        control={<Radio />}\r\n                        label=\"Other\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  {/* <Grid\r\n                    item\r\n                    sx={{\r\n                      m: 2,\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      sx={{\r\n                        marginLeft: \" 10px\",\r\n                        alignItems: \"center\",\r\n                        margin: \"auto\",\r\n                        color: \"#7A7A7A\",\r\n                      }}\r\n                    >\r\n                      Upload Resume\r\n                    </Typography>\r\n                    <TextFieldDesign\r\n                      name=\"uploadResume\"\r\n                      id=\"uploadResume\"\r\n                      type=\"file\"\r\n                      value={values.uploadResume}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </Grid> */}\r\n\r\n                  <Grid container sx={{ marginTop: \"50px\" }}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      sx={{\r\n                        margin: \"auto\",\r\n\r\n                        backgroundColor: \"#27488D\",\r\n                        \"&:hover\": { backgroundColor: \"#27488D\" },\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CareerForm;\r\n"],"names":["careerDetails","id","jobTitle","jobLocation","lowerSalary","higherSalary","tags","jobDesc","companyDesc","benefits","TextFieldDesign","styled","TextField","margin","width","validationAppSchema","yup","shape","firstName","min","max","matches","required","lastName","email","mobile","age","gender","qualification","experience","React","useParams","singleCareerData","obj","Number","initialValues","container","sx","d","flexDirection","alignItems","marginBottom","variant","color","fontFamily","fontSize","fontWeight","height","textAlign","validationSchema","onSubmit","values","resetForm","console","log","touched","errors","handleSubmit","handleChange","handleBlur","xs","item","m","name","type","label","value","onChange","onBlur","error","helperText","border","paddingLeft","borderRadius","row","ml","control","marginTop","backgroundColor"],"sourceRoot":""}