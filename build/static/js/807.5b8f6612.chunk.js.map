{"version":3,"file":"static/js/807.5b8f6612.chunk.js","mappings":"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","sources":["features/frontend/auth/Register.tsx","shared/firebase/firebaseConfig.ts","shared/yup-validations/user-validation/initialUser.ts","shared/yup-validations/user-validation/usersYupValidation.ts","../node_modules/@mui/icons-material/LockOutlined.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { NavLink as NLink, useNavigate } from \"react-router-dom\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Formik } from \"formik\";\r\nimport defineUserYupValidation from \"../../../shared/yup-validations/user-validation/usersYupValidation\";\r\nimport defineInitialUser from \"../../../shared/yup-validations/user-validation/initialUser\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport Verified from \"@mui/icons-material/VerifiedRounded\";\r\nimport { sendOTP, verifyOTP } from \"../../../shared/firebase/firebaseConfig\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport UserService from \"../../../services/UserService\";\r\nimport { errorToast, successToast } from \"../../../ui/toast/Toast\";\r\nimport TourService from \"../../../services/TourService\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@mui/material\";\r\n\r\nconst Link = styled(NLink)({\r\n  textDecoration: \"none\",\r\n});\r\n\r\nconst combineFields = {\r\n  hasFirst: true,\r\n  hasLast: true,\r\n  hasMobile: true,\r\n  hasEmail: true,\r\n  hasPassword: true,\r\n  hasDob: true,\r\n  hasGender: true,\r\n};\r\n\r\nconst signupInitialUser = defineInitialUser({ ...combineFields });\r\n\r\nconst signupValidation = defineUserYupValidation({ ...combineFields });\r\n\r\nconst theme = createTheme();\r\n\r\nconst Register = () => {\r\n  const [OTPStatus, setOTPStatus] = useState({\r\n    OTP: \"\",\r\n    showOTP: false,\r\n    sendOTP: false,\r\n  });\r\n  const [mobNumber, setMobNumber] = useState(\"\");\r\n  const [verifiedStatus, setVerifiedStatus] = useState(false);\r\n  const [timer, setTimer] = useState(0);\r\n  const [timerId, setTimerId] = useState(NaN);\r\n  const [activeElementId, setActiveElementId] = useState(\"\");\r\n  const [signUpCheckbox, setSignUpCheckbox] = useState(false);\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    TourService.fetchAllTours().then((res) => {\r\n      const arr: any = [];\r\n      const imgs = res?.data?.data?.forEach((v: any, i: any) =>\r\n        arr.push(...v.images)\r\n      );\r\n      setImages(arr);\r\n    });\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const handleMouseDownPassword = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const initialStateReset = () => {\r\n    setVerifiedStatus(true);\r\n    setOTPStatus({ ...OTPStatus, showOTP: false });\r\n    setTimer(0);\r\n    setTimerId(NaN);\r\n    clearInterval(timerId);\r\n  };\r\n\r\n  const handleOTPCode = (e: any) => {\r\n    const { value } = e.target;\r\n    if (value.length == 6) setOTPStatus({ ...OTPStatus, OTP: value });\r\n  };\r\n\r\n  const CDTimer = () => {\r\n    setTimerId(\r\n      Number(\r\n        setInterval(() => {\r\n          setTimer((timer) => timer - 1);\r\n        }, 1000)\r\n      )\r\n    );\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    clearInterval(timerId);\r\n    setTimer(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimer(timer);\r\n    if (timer == 60) CDTimer();\r\n    else if (timer == 0) {\r\n      clearInterval(timerId);\r\n      setOTPStatus({ ...OTPStatus, sendOTP: false, showOTP: false });\r\n    }\r\n  }, [timer, OTPStatus.sendOTP]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Register To Pravas Tourism</title>\r\n        <meta name=\"description\" content=\"Register to Pravas Tourism\" />\r\n        <meta name=\"keywords\" content=\"Register to Pravas Tourism\" />\r\n        <link rel=\"canonical\" href=\"/register\" />\r\n      </Helmet>\r\n      <ThemeProvider theme={theme}>\r\n        <Grid container component=\"main\">\r\n          <CssBaseline />\r\n          <Grid\r\n            item\r\n            xs={false}\r\n            sm={4}\r\n            md={7}\r\n            sx={{\r\n              backgroundImage: `url(http://localhost:9999/${\r\n                images[Math.floor(Math.random() * images.length)]\r\n              })`,\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundColor: (t) =>\r\n                t.palette.mode === \"light\"\r\n                  ? t.palette.grey[50]\r\n                  : t.palette.grey[900],\r\n              backgroundSize: \"cover\",\r\n              backgroundPosition: \"center\",\r\n            }}\r\n          />\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={8}\r\n            md={5}\r\n            component={Paper}\r\n            elevation={6}\r\n            square\r\n          >\r\n            <Box\r\n              sx={{\r\n                my: 8,\r\n                mx: 4,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign up\r\n              </Typography>\r\n\r\n              <Formik\r\n                initialValues={signupInitialUser}\r\n                enableReinitialize\r\n                validationSchema={signupValidation}\r\n                onSubmit={(values, { resetForm }) => {\r\n                  UserService.createUser({\r\n                    ...values,\r\n                    status: \"active\",\r\n                    role: \"customer\",\r\n                  })\r\n                    .then((res) => {\r\n                      const msg =\r\n                        res?.data?.message || \"User created successfully...\";\r\n                      successToast(msg, 3000);\r\n                      setVerifiedStatus(false);\r\n                      setSignUpCheckbox(false);\r\n                      resetForm({});\r\n                      navigate(\"/login\");\r\n                      // console.log(res?.data?.message);\r\n                    })\r\n                    .catch((err) => {\r\n                      const msg =\r\n                        err?.response?.data?.message ||\r\n                        \"User couldn't created...\";\r\n                      errorToast(msg, 5000);\r\n                      console.error(err);\r\n                    });\r\n                }}\r\n              >\r\n                {({\r\n                  values,\r\n                  errors,\r\n                  isValid,\r\n                  touched,\r\n                  handleBlur,\r\n                  handleChange,\r\n                  handleSubmit,\r\n                }) => {\r\n                  const touchedName: any = touched?.name;\r\n                  const errorsName: any = errors?.name;\r\n\r\n                  return (\r\n                    <form onSubmit={handleSubmit}>\r\n                      <Box sx={{ mt: 3 }}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                              autoComplete=\"firstName\"\r\n                              required\r\n                              fullWidth\r\n                              id=\"firstName\"\r\n                              label=\"First Name\"\r\n                              autoFocus\r\n                              size=\"small\"\r\n                              name=\"name.first\"\r\n                              value={values?.name?.first}\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              error={\r\n                                touchedName?.first && errorsName?.first\r\n                                  ? true\r\n                                  : false\r\n                              }\r\n                              helperText={\r\n                                touchedName?.first && errorsName?.first\r\n                                  ? errorsName?.first\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                              required\r\n                              fullWidth\r\n                              id=\"lastName\"\r\n                              label=\"Last Name\"\r\n                              name=\"name.last\"\r\n                              autoComplete=\"family-name\"\r\n                              size=\"small\"\r\n                              value={values?.name?.last}\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              error={\r\n                                touchedName?.last && errorsName?.last\r\n                                  ? true\r\n                                  : false\r\n                              }\r\n                              helperText={\r\n                                touchedName?.last && errorsName?.last\r\n                                  ? errorsName?.last\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <TextField\r\n                              required\r\n                              fullWidth\r\n                              id=\"mobile\"\r\n                              label=\"Mobile\"\r\n                              name=\"mobile\"\r\n                              size=\"small\"\r\n                              autoComplete=\"mobile\"\r\n                              value={values?.mobile}\r\n                              disabled={verifiedStatus}\r\n                              InputLabelProps={{\r\n                                shrink:\r\n                                  activeElementId == \"mobile\"\r\n                                    ? true\r\n                                    : values?.mobile?.length != 0\r\n                                    ? true\r\n                                    : false,\r\n                              }}\r\n                              InputProps={{\r\n                                startAdornment: (\r\n                                  <InputAdornment\r\n                                    position=\"end\"\r\n                                    sx={{ order: 2, mr: \"0.5em\" }}\r\n                                  >\r\n                                    {verifiedStatus ? (\r\n                                      <Verified color=\"primary\" />\r\n                                    ) : values?.mobile?.length == 10 &&\r\n                                      !OTPStatus.sendOTP &&\r\n                                      !errors.mobile &&\r\n                                      !verifiedStatus ? (\r\n                                      <Button\r\n                                        type=\"button\"\r\n                                        onClick={() => {\r\n                                          setOTPStatus({\r\n                                            ...OTPStatus,\r\n                                            showOTP: true,\r\n                                            sendOTP: true,\r\n                                          });\r\n                                          sendOTP(setVerifiedStatus, mobNumber);\r\n                                          setTimer(60);\r\n                                        }}\r\n                                      >\r\n                                        Send OTP\r\n                                      </Button>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </InputAdornment>\r\n                                ),\r\n                              }}\r\n                              onBlur={(e) => {\r\n                                handleBlur(e);\r\n                                setActiveElementId(\"\");\r\n                              }}\r\n                              onChange={(e) => {\r\n                                handleChange(e);\r\n                                setMobNumber(e.target.value);\r\n                                stopTimer();\r\n                              }}\r\n                              onFocus={() => setActiveElementId(\"mobile\")}\r\n                              error={\r\n                                touched?.mobile && errors?.mobile ? true : false\r\n                              }\r\n                              helperText={\r\n                                touched?.mobile && errors?.mobile\r\n                                  ? errors?.mobile\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                            {timer > 0 && (\r\n                              <span style={{ fontSize: \"0.8em\" }}>\r\n                                {`Resend OTP in ${timer} seconds..`}\r\n                              </span>\r\n                            )}\r\n                          </Grid>\r\n                          {values?.mobile?.length == 10 &&\r\n                            OTPStatus.showOTP && (\r\n                              <Grid\r\n                                sx={{\r\n                                  flexWrap: \"nowrap\",\r\n                                  justifyContent: \"center\",\r\n                                  m: \"1em\",\r\n                                  // mt: \"1em\",\r\n                                }}\r\n                              >\r\n                                <TextField\r\n                                  type=\"text\"\r\n                                  id=\"otpInput\"\r\n                                  placeholder=\"Enter Your Code here\"\r\n                                  sx={{ width: \"50%\", fontSize: \"0.5em\" }}\r\n                                  inputProps={{\r\n                                    style: {\r\n                                      padding: \"0.4em\",\r\n                                    },\r\n                                  }}\r\n                                  onChange={handleOTPCode}\r\n                                  size=\"small\"\r\n                                />\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  id=\"otpverifybtn\"\r\n                                  disabled={\r\n                                    OTPStatus.OTP.length == 6 ? false : true\r\n                                  }\r\n                                  sx={{\r\n                                    display: \"inline-block\",\r\n                                    ml: \"0.5em\",\r\n                                    lineHeight: \"0.8em\",\r\n                                    verticalAlign: \"-webkit-baseline-middle\",\r\n                                  }}\r\n                                  onClick={() =>\r\n                                    verifyOTP(\r\n                                      OTPStatus.OTP,\r\n                                      mobNumber,\r\n                                      initialStateReset\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  verify Number\r\n                                </Button>\r\n                              </Grid>\r\n                            )}\r\n                          <Grid item xs={12}>\r\n                            <TextField\r\n                              required\r\n                              fullWidth\r\n                              id=\"email\"\r\n                              label=\"Email Address\"\r\n                              name=\"email\"\r\n                              autoComplete=\"email\"\r\n                              size=\"small\"\r\n                              value={values?.email}\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              error={\r\n                                touched?.email && errors?.email ? true : false\r\n                              }\r\n                              helperText={\r\n                                touched?.email && errors?.email\r\n                                  ? errors?.email\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                              type=\"date\"\r\n                              autoComplete=\"dob\"\r\n                              size=\"small\"\r\n                              name=\"dob\"\r\n                              required\r\n                              fullWidth\r\n                              id=\"dob\"\r\n                              label=\"Date of Birth\"\r\n                              InputLabelProps={{\r\n                                shrink: true,\r\n                              }}\r\n                              value={values?.dob?.toString().split(\"T\")[0]}\r\n                              onBlur={handleBlur}\r\n                              onChange={(e: any) => {\r\n                                handleChange(e);\r\n                              }}\r\n                              error={touched?.dob && errors?.dob ? true : false}\r\n                              helperText={\r\n                                touched?.dob && errors?.dob ? errors?.dob : \"\"\r\n                              }\r\n                            />\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12}>\r\n                            <FormControl\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              required\r\n                              error={\r\n                                touched?.gender && errors?.gender ? true : false\r\n                              }\r\n                            >\r\n                              <FormLabel id=\"gender\">Gender</FormLabel>\r\n                              <RadioGroup\r\n                                row\r\n                                aria-labelledby=\"gender-radio-buttons-group-label\"\r\n                                name=\"gender\"\r\n                                value={values?.gender}\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                              >\r\n                                <FormControlLabel\r\n                                  value=\"male\"\r\n                                  control={<Radio size=\"small\" />}\r\n                                  label=\"Male\"\r\n                                />\r\n                                <FormControlLabel\r\n                                  value=\"female\"\r\n                                  control={<Radio size=\"small\" />}\r\n                                  label=\"Female\"\r\n                                />\r\n                                <FormControlLabel\r\n                                  value=\"other\"\r\n                                  control={<Radio size=\"small\" />}\r\n                                  label=\"Other\"\r\n                                />\r\n                              </RadioGroup>\r\n\r\n                              <FormHelperText>\r\n                                {touched?.gender && errors?.gender\r\n                                  ? errors?.gender\r\n                                  : \"\"}\r\n                              </FormHelperText>\r\n                            </FormControl>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12}>\r\n                            <TextField\r\n                              required\r\n                              fullWidth\r\n                              name=\"password\"\r\n                              label=\"Password\"\r\n                              // type=\"password\"\r\n                              id=\"password\"\r\n                              size=\"small\"\r\n                              autoComplete=\"new-password\"\r\n                              value={values?.password}\r\n                              onChange={handleChange}\r\n                              onFocus={() => setActiveElementId(\"password\")}\r\n                              onBlur={(e) => {\r\n                                handleBlur(e);\r\n                                setActiveElementId(\"\");\r\n                              }}\r\n                              type={showPassword ? \"text\" : \"password\"}\r\n                              InputLabelProps={{\r\n                                shrink:\r\n                                  activeElementId == \"password\"\r\n                                    ? true\r\n                                    : values?.password?.length != 0\r\n                                    ? true\r\n                                    : false,\r\n                              }}\r\n                              InputProps={{\r\n                                startAdornment: (\r\n                                  <InputAdornment\r\n                                    position=\"end\"\r\n                                    sx={{ order: 2, mr: \"1em\" }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"toggle password visibility\"\r\n                                      onClick={handleClickShowPassword}\r\n                                      onMouseDown={handleMouseDownPassword}\r\n                                      edge=\"end\"\r\n                                    >\r\n                                      {showPassword ? (\r\n                                        <VisibilityOff />\r\n                                      ) : (\r\n                                        <Visibility />\r\n                                      )}\r\n                                    </IconButton>\r\n                                  </InputAdornment>\r\n                                ),\r\n                              }}\r\n                              error={\r\n                                touched?.password && errors?.password\r\n                                  ? true\r\n                                  : false\r\n                              }\r\n                              helperText={\r\n                                touched?.password && errors?.password\r\n                                  ? errors?.password\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                              control={\r\n                                <Checkbox\r\n                                  color=\"primary\"\r\n                                  id=\"signUpCheckbox\"\r\n                                  name=\"signUpCheckbox\"\r\n                                  value={signUpCheckbox}\r\n                                  onBlur={handleBlur}\r\n                                  onChange={() =>\r\n                                    setSignUpCheckbox(!signUpCheckbox)\r\n                                  }\r\n                                  checked={signUpCheckbox}\r\n                                />\r\n                              }\r\n                              label=\"I have provided valid Mobile number and Email to contact me\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          id=\"sign-in-button\"\r\n                          variant=\"contained\"\r\n                          sx={{ mt: 3, mb: 2 }}\r\n                          disabled={verifiedStatus && isValid ? false : true}\r\n                        >\r\n                          Sign Up\r\n                        </Button>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                          <Grid item>\r\n                            <Link to=\"/login\">\r\n                              Already have an account? Sign in\r\n                            </Link>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Box>\r\n                    </form>\r\n                  );\r\n                }}\r\n              </Formik>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\nexport default Register;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport {\r\n  getAuth,\r\n  RecaptchaVerifier,\r\n  signInWithPhoneNumber,\r\n} from \"firebase/auth\";\r\nimport { errorToast } from \"../../ui/toast/Toast\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    appVerifier: any;\r\n    confirmationResult: any;\r\n  }\r\n}\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAT2PMLVl4aPxWvKJlB8k9NLy59ZlI3syE\",\r\n  authDomain: \"pravas-7a635.firebaseapp.com\",\r\n  projectId: \"pravas-7a635\",\r\n  storageBucket: \"pravas-7a635.appspot.com\",\r\n  messagingSenderId: \"432819183076\",\r\n  appId: \"1:432819183076:web:4847730cf623a5947bbbf1\",\r\n  measurementId: \"G-CW5NHB0G4Z\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst fireApp = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(fireApp);\r\nconst auth = getAuth(fireApp);\r\n\r\nconst sendOTP = (setVerifiedStatus?: any, mobNumber?: any) => {\r\n  if (typeof window.appVerifier != \"object\") {\r\n    window.appVerifier = new RecaptchaVerifier(\r\n      // \"sign-in-button\",\r\n      \"recaptcha-container\",\r\n      {\r\n        size: \"invisible\",\r\n        // size: \"normal\",\r\n        callback: (response: any) => {\r\n          // console.log(\"Can call verify-Method\");\r\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n          // ...\r\n        },\r\n        \"expired-callback\": () => {\r\n          // destroyRecaptcha();\r\n          // Response expired. Ask user to solve reCAPTCHA again.\r\n          // ...\r\n        },\r\n      },\r\n      auth\r\n    );\r\n  }\r\n\r\n  signInWithPhoneNumber(auth, `+91${mobNumber}`, window.appVerifier)\r\n    .then((confirmationResult) => {\r\n      // SMS sent. Prompt user to type the code from the message, then sign the\r\n      // user in with confirmationResult.confirm(code).\r\n      window.confirmationResult = confirmationResult;\r\n      // ...\r\n      // console.log(`OTP has sent to mobile number => ${mobNumber}`);\r\n    })\r\n    .catch((error) => {\r\n      // Error; SMS not sent\r\n      console.error(error);\r\n      setVerifiedStatus && setVerifiedStatus(false);\r\n      return;\r\n      // ...\r\n    });\r\n};\r\n\r\nconst verifyOTP = (OTP: any, mobNumber: any, initialStateReset?: any) => {\r\n  if (mobNumber == \"\") {\r\n    errorToast(\"Please check Mobile Number..\", 5000);\r\n    return;\r\n  }\r\n  if (OTP?.length != 6) {\r\n    errorToast(`OTP must have 6 digit..`, 5000);\r\n    return;\r\n  }\r\n\r\n  window.confirmationResult\r\n    .confirm(OTP)\r\n    .then((result: any) => {\r\n      // User signed in successfully.\r\n      const user = result.user;\r\n      // console.log(user);\r\n\r\n      initialStateReset && initialStateReset();\r\n    })\r\n    .catch((error: any) => {\r\n      errorToast(\"Wrong OTP..\", 5000);\r\n      console.error(\"Wrong OTP\", error);\r\n\r\n      // User couldn't sign in (bad verification code?)\r\n      // ...\r\n    });\r\n};\r\n\r\nexport { auth, fireApp, sendOTP, verifyOTP };\r\n","import User from \"../../models/userModel\";\r\n\r\nconst defineInitialUser = ({\r\n  has_id = false,\r\n  hasUserId = false,\r\n  hasFirst = false,\r\n  hasLast = false,\r\n  hasMobile = false,\r\n  hasEmail = false,\r\n  hasStreet = false,\r\n  hasCity = false,\r\n  hasState = false,\r\n  hasCountry = false,\r\n  hasPincode = false,\r\n  hasStatus = false,\r\n  hasRole = false,\r\n  hasAvatar = false,\r\n  hasGender = false,\r\n  hasDesignation = false,\r\n  hasDob = false,\r\n  hasPassword = false,\r\n  hasUserActivityDetails = false,\r\n}) => {\r\n  const initialUser: User = {};\r\n  const name: any = {};\r\n  const address: any = {};\r\n  const userActivityDetails: any = {};\r\n\r\n  if (has_id) initialUser._id = \"\";\r\n  if (hasUserId) initialUser.userId = undefined;\r\n\r\n  if (hasFirst) name.first = \"\";\r\n  if (hasLast) name.last = \"\";\r\n  if (hasFirst || hasLast) initialUser.name = name;\r\n\r\n  if (hasMobile) initialUser.mobile = \"\";\r\n\r\n  if (hasEmail) initialUser.email = \"\";\r\n\r\n  if (hasStreet) address.street = \"\";\r\n  if (hasCity) address.city = \"\";\r\n  if (hasState) address.state = \"\";\r\n  if (hasCountry) address.country = \"\";\r\n  if (hasPincode) address.pincode = \"\";\r\n  if (hasStreet || hasCity || hasState || hasCountry || hasPincode)\r\n    initialUser.address = address;\r\n\r\n  if (hasPassword) initialUser.password = \"\";\r\n  if (hasDesignation) initialUser.designation = \"\";\r\n\r\n  if (hasStatus) initialUser.status = \"inactive\";\r\n\r\n  if (hasRole) initialUser.role = \"\";\r\n  if (hasAvatar) initialUser.avatar = \"\";\r\n  if (hasGender) initialUser.gender = \"\";\r\n  if (hasDob) initialUser.dob = \"\";\r\n\r\n  if (hasUserActivityDetails) {\r\n    userActivityDetails.userTimeStamp = 0;\r\n    userActivityDetails.sentEmailTimeStamp = 0;\r\n    userActivityDetails.passwordTimeStamp = 0;\r\n    initialUser.userActivityDetails = userActivityDetails;\r\n  }\r\n\r\n  return initialUser;\r\n};\r\n\r\nexport default defineInitialUser;\r\n","import * as yup from \"yup\";\r\n\r\ninterface YupschemaInterface {\r\n  hasFirst?: boolean;\r\n  hasLast?: boolean;\r\n\r\n  hasMobile?: boolean;\r\n  hasEmail?: boolean;\r\n\r\n  hasStreet?: boolean;\r\n  hasCity?: boolean;\r\n  hasState?: boolean;\r\n  hasCountry?: boolean;\r\n  hasPincode?: boolean;\r\n\r\n  hasPassword?: boolean;\r\n  hasRole?: boolean;\r\n  hasDob?: boolean;\r\n  hasGender?: boolean;\r\n  hasAvatar?: boolean;\r\n  hasStatus?: boolean;\r\n  hasDesignation?: boolean;\r\n}\r\n\r\nconst defineUserYupValidation = ({\r\n  hasFirst = false,\r\n  hasLast = false,\r\n\r\n  hasMobile = false,\r\n  hasEmail = false,\r\n\r\n  hasStreet = false,\r\n  hasCity = false,\r\n  hasState = false,\r\n  hasCountry = false,\r\n  hasPincode = false,\r\n\r\n  hasPassword = false,\r\n  hasRole = false,\r\n  hasDob = false,\r\n  hasGender = false,\r\n  hasAvatar = false,\r\n  hasStatus = false,\r\n  hasDesignation = false,\r\n}: YupschemaInterface) => {\r\n  const schemaObj: any = {};\r\n  const nameObj: any = {};\r\n  const addressObj: any = {};\r\n\r\n  if (hasFirst) nameObj.first = yup.string().required(\"First Name is required\");\r\n  if (hasLast) nameObj.last = yup.string().required(\"Last Name is required\");\r\n  if (hasFirst || hasLast) schemaObj.name = yup.object(nameObj);\r\n\r\n  if (hasMobile)\r\n    schemaObj.mobile = yup\r\n      .string()\r\n      .required()\r\n      .matches(/^[0-9]{10}$/, \"Mobile Must be 10 Digit\");\r\n\r\n  if (hasEmail)\r\n    schemaObj.email = yup\r\n      .string()\r\n      .required()\r\n      .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,6}$/, \"Enter valid Email Address\");\r\n\r\n  if (hasStreet)\r\n    addressObj.street = yup.string().required(\"Street is required\");\r\n  if (hasCity) addressObj.city = yup.string().required(\"Address is required\");\r\n  if (hasState) addressObj.state = yup.string().required(\"State is required\");\r\n  if (hasCountry)\r\n    addressObj.country = yup.string().required(\"Country is required\");\r\n  if (hasPincode)\r\n    addressObj.pincode = yup.string().required(\"Pincode is required\");\r\n  if (hasStreet || hasCity || hasState || hasCountry || hasPincode)\r\n    schemaObj.address = yup.object(addressObj);\r\n\r\n  if (hasPassword)\r\n    schemaObj.password = yup\r\n      .string()\r\n      .required()\r\n      .matches(\r\n        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\r\n        \"Password must have min 8 characters and 1 cap & small letter, Symbol\"\r\n      );\r\n\r\n  if (hasRole) schemaObj.role = yup.string().required(\"Role is required\");\r\n\r\n  if (hasDob)\r\n    schemaObj.dob = yup\r\n      .date()\r\n      .required(\"Birth date is required\")\r\n      .min(\r\n        new Date(Date.now() - 3.784e12),\r\n        \"Date is too old, must be within 120 year back than now\"\r\n      )\r\n      .max(new Date(Date.now()), \"Date is greater than todays Date\");\r\n\r\n  if (hasGender) schemaObj.gender = yup.string().required(\"Gender is required\");\r\n  if (hasAvatar) schemaObj.avatar = yup.string().required(\"Avatar is required\");\r\n  if (hasStatus) schemaObj.status = yup.string().required(\"Status is required\");\r\n  if (hasDesignation)\r\n    schemaObj.designation = yup.string().required(\"Designation is required\");\r\n\r\n  return yup.object().shape(schemaObj);\r\n};\r\n\r\nexport default defineUserYupValidation;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["Link","styled","NLink","textDecoration","combineFields","hasFirst","hasLast","hasMobile","hasEmail","hasPassword","hasDob","hasGender","signupInitialUser","defineInitialUser","signupValidation","defineUserYupValidation","theme","createTheme","useState","OTP","showOTP","sendOTP","OTPStatus","setOTPStatus","mobNumber","setMobNumber","verifiedStatus","setVerifiedStatus","timer","setTimer","NaN","timerId","setTimerId","activeElementId","setActiveElementId","signUpCheckbox","setSignUpCheckbox","React","showPassword","setShowPassword","images","setImages","useEffect","TourService","then","res","arr","data","forEach","v","i","push","navigate","useNavigate","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","initialStateReset","clearInterval","handleOTPCode","e","value","target","length","Number","setInterval","name","content","rel","href","container","component","item","xs","sm","md","sx","backgroundImage","Math","floor","random","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","display","flexDirection","alignItems","m","bgcolor","variant","initialValues","enableReinitialize","validationSchema","onSubmit","values","resetForm","UserService","status","role","msg","message","successToast","catch","err","response","errorToast","console","error","errors","isValid","touched","handleBlur","handleChange","handleSubmit","touchedName","errorsName","mt","spacing","autoComplete","required","fullWidth","id","label","autoFocus","size","first","onBlur","onChange","helperText","last","mobile","disabled","InputLabelProps","shrink","InputProps","startAdornment","position","order","mr","color","type","onClick","onFocus","style","fontSize","flexWrap","justifyContent","placeholder","width","inputProps","padding","ml","lineHeight","verticalAlign","verifyOTP","email","dob","toString","split","gender","row","control","password","onMouseDown","edge","checked","mb","to","fireApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAnalytics","getAuth","window","appVerifier","RecaptchaVerifier","callback","signInWithPhoneNumber","confirmationResult","confirm","result","user","has_id","hasUserId","hasStreet","hasCity","hasState","hasCountry","hasPincode","hasStatus","hasRole","hasAvatar","hasDesignation","hasUserActivityDetails","initialUser","address","userActivityDetails","_id","userId","undefined","street","city","state","country","pincode","designation","avatar","userTimeStamp","sentEmailTimeStamp","passwordTimeStamp","schemaObj","nameObj","addressObj","yup","matches","min","Date","now","max","shape","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}