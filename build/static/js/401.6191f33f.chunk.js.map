{"version":3,"file":"static/js/401.6191f33f.chunk.js","mappings":"uNAmHA,UAzG0D,SAACA,GACzD,MAA0BC,EAAAA,SAAyB,CAAC,CAAC,IAAG,eAAjDC,EAAK,KAAEC,EAAQ,KActBF,EAAAA,WAAgB,WAXdG,EAAAA,EAAAA,cAA0B,qBACvBC,MAAK,SAACC,GAAS,IAAD,EACbH,EAAY,OAAHG,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKC,YAAI,WAAN,EAAH,EAAWA,KACtB,IACCC,OAAM,SAACC,GAAS,IAAD,IACdC,QAAQC,MAAMF,GACd,IAAMG,GAAS,OAAHH,QAAG,IAAHA,GAAa,QAAV,EAAHA,EAAKI,gBAAQ,OAAM,QAAN,EAAb,EAAeN,YAAI,WAAhB,EAAH,EAAqBO,UAAW,eAC5CC,EAAAA,EAAAA,IAAWH,EAAK,IAClB,GAKJ,GAAG,IAEHF,QAAQM,IAAI,iBAAkBd,GAE9B,IACMe,EAAU,CACd,CACEC,MAAO,UACPC,KAAM,SACNC,QAAS,CACPC,QAAQ,EACRC,MAAM,EACNC,qBAAsB,SAACC,GACrB,OAAO,uBAAIA,EAAQ,GACrB,IAGJ,CACEN,MAAO,QACPC,KAAM,QACNC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,MAAO,OACPC,KAAM,GACNC,QAAS,CACPC,QAAQ,EACRC,MAAM,EACNC,qBAAsB,SAACC,GAAmB,IAAD,EACjCC,EAAkBvB,EAAMsB,GACxBE,EAAqB,GACG,OAAJD,QAAI,IAAJA,GAAe,QAAX,EAAJA,EAAME,iBAAS,OAAf,EAAiBC,SAAQ,SAACC,EAAGC,GACtC,GAAXD,EAAEE,OACJL,EAAIM,KAAM,OAADH,QAAC,IAADA,OAAC,EAADA,EAAGV,KAEhB,IAEA,OACE,wBACGc,MAAMC,QAAQR,IACbA,EAAIS,KAAI,SAACN,EAAGC,GAAC,OAAK,wBAAiBD,GAARA,EAAIC,EAAW,KAGlD,IAGJ,CACEZ,MAAO,SACPC,KAAM,GACNC,QAAS,CACPC,QAAQ,EACRC,MAAM,EACNC,qBAAsB,SAACC,GAAmB,IAAD,EACjCC,EAAkBvB,EAAMsB,GACxBE,EAAqB,GACG,OAAJD,QAAI,IAAJA,GAAe,QAAX,EAAJA,EAAME,iBAAS,OAAf,EAAiBC,SAAQ,SAACC,EAAGC,GAGnD,IAAIM,EAFS,GAAXP,EAAEE,QAGJM,EAAAA,EAAAA,aAA0B,OAADR,QAAC,IAADA,OAAC,EAADA,EAAGS,WAAqBjC,MAAK,SAACC,GAAS,IAAD,IAC7D8B,EAAY,OAAH9B,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKC,YAAI,OAAM,QAAN,EAAT,EAAWA,YAAI,WAAZ,EAAH,EAAiBgC,OAAO,EACnC,IACAH,GAAUV,EAAIM,KAAKI,GAEvB,IAEA,OACE,wBACGH,MAAMC,QAAQR,IACbA,EAAIS,KAAI,SAACN,EAAGC,GAAC,OAAK,wBAAiBD,GAARA,EAAIC,EAAW,KAGlD,KAKN,OACE,iCACE,SAAC,IAAW,CAACU,MAAM,cACnB,SAAC,KAAY,CAACA,MA/EJ,WA+EkBvB,QAASA,EAASV,KAAML,MAG1D,C","sources":["features/admin/wishlist/Wishlist.tsx"],"sourcesContent":["import MUIDataTable from \"mui-datatables\";\r\nimport * as React from \"react\";\r\nimport TourService from \"../../../services/TourService\";\r\nimport UserService from \"../../../services/UserService\";\r\nimport TourModel from \"../../../shared/models/tourModel\";\r\nimport CustomTitle from \"../../../ui/title/CustomTitle\";\r\nimport { errorToast } from \"../../../ui/toast/Toast\";\r\n\r\ninterface IWishlistProps {}\r\n\r\nconst Wishlist: React.FunctionComponent<IWishlistProps> = (props) => {\r\n  const [tours, setTours] = React.useState<object[]>([{}]);\r\n\r\n  const loadTours = () => {\r\n    TourService.fetchAllTours(`?category=package`)\r\n      .then((res) => {\r\n        setTours(res?.data?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        const msg = err?.response?.data?.message || \"Try Again..\";\r\n        errorToast(msg, 5000);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    loadTours();\r\n  }, []);\r\n\r\n  console.log(\"Wishlist-Tours\", tours);\r\n\r\n  const title = \"Wishlist\";\r\n  const columns = [\r\n    {\r\n      label: \"Sr. No.\",\r\n      name: \"tourId\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n        customBodyRenderLite: (index: any) => {\r\n          return <p>{index + 1}</p>;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      label: \"Title\",\r\n      name: \"title\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      label: \"Name\",\r\n      name: \"\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n        customBodyRenderLite: (index: number) => {\r\n          const tour: TourModel = tours[index];\r\n          const arr: Array<string> = [];\r\n          const destinations: any = tour?.feedbacks?.forEach((v, i) => {\r\n            if (v.liked == true) {\r\n              arr.push(v?.name as string);\r\n            }\r\n          });\r\n\r\n          return (\r\n            <ol>\r\n              {Array.isArray(arr) &&\r\n                arr.map((v, i) => <li key={v + i}>{v}</li>)}\r\n            </ol>\r\n          );\r\n        },\r\n      },\r\n    },\r\n    {\r\n      label: \"Mobile\",\r\n      name: \"\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n        customBodyRenderLite: (index: number) => {\r\n          const tour: TourModel = tours[index];\r\n          const arr: Array<string> = [];\r\n          const destinations: any = tour?.feedbacks?.forEach((v, i) => {\r\n            if (v.liked == true) {\r\n              // const userId = v?.pravasiId as string;\r\n              let userNo;\r\n              UserService.fetchOneUser(v?.pravasiId as string).then((res) => {\r\n                userNo = res?.data?.data?.mobile[0] as string;\r\n              });\r\n              userNo && arr.push(userNo);\r\n            }\r\n          });\r\n\r\n          return (\r\n            <ol>\r\n              {Array.isArray(arr) &&\r\n                arr.map((v, i) => <li key={v + i}>{v}</li>)}\r\n            </ol>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <CustomTitle title=\"Wishlist\" />\r\n      <MUIDataTable title={title} columns={columns} data={tours} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n"],"names":["props","React","tours","setTours","TourService","then","res","data","catch","err","console","error","msg","response","message","errorToast","log","columns","label","name","options","filter","sort","customBodyRenderLite","index","tour","arr","feedbacks","forEach","v","i","liked","push","Array","isArray","map","userNo","UserService","pravasiId","mobile","title"],"sourceRoot":""}