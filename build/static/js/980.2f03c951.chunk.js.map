{"version":3,"file":"static/js/980.2f03c951.chunk.js","mappings":"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","sources":["features/admin/pravas/my-tours/Mytours.tsx","../node_modules/@mui/icons-material/VisibilityRounded.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MUIDataTables from \"mui-datatables\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Swal from \"sweetalert2\";\r\nimport UserService from \"../../../../services/UserService\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Chip } from \"@mui/material\";\r\nimport { errorToast, successToast } from \"../../../../ui/toast/Toast\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TourModel from \"../../../../shared/models/tourModel\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectLoggedUser } from \"../../../../app/slices/AuthSlice\";\r\nimport UserModel from \"../../../../shared/models/userModel\";\r\nimport VisibilityRoundedIcon from \"@mui/icons-material/VisibilityRounded\";\r\n\r\ninterface IMyToursProps {}\r\n\r\nconst MyTours: React.FunctionComponent<IMyToursProps> = () => {\r\n  const [myTours, setMyTours] = useState<TourModel[]>([]);\r\n\r\n  const navigate = useNavigate();\r\n  const { pathname } = useLocation();\r\n  const loggedUser: UserModel = useSelector(selectLoggedUser);\r\n\r\n  const loadMyTours = () => {\r\n    loggedUser?._id &&\r\n      UserService?.fetchOneUser(loggedUser?._id)\r\n        .then((res) => {\r\n          setMyTours(res?.data?.data?.tours);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n  };\r\n\r\n  // handle view\r\n  const handleView = (id: string) => {\r\n    navigate(`/pravas/explore/${id}`);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      label: \"ID\",\r\n      name: \"_id\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n        customBodyRenderLite: (index: number) => {\r\n          return index + 1;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      label: \"Title\",\r\n      name: \"title\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      label: \"Duration\",\r\n      name: \"duration.days\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n        customBodyRender: (value: string, metaData: any) => {\r\n          return `${value}D${Number(value) - 1}N`;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      label: \"From\",\r\n      name: \"tourDate\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n        customBodyRender: (value: any, metaData: any) => {\r\n          const tour: TourModel = myTours.find(\r\n            (tour: TourModel) => tour?._id == metaData.rowData[0]\r\n          ) as TourModel;\r\n          return (\r\n            tour?.tourDate &&\r\n            new Intl.DateTimeFormat(\"en-IN\").format(\r\n              new Date(tour?.tourDate ? tour?.tourDate : (Date.now() as any))\r\n            )\r\n          );\r\n        },\r\n      },\r\n    },\r\n\r\n    {\r\n      label: \"To\",\r\n      name: \"tourDate\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n        customBodyRender: (value: any, metaData: any) => {\r\n          const tour: TourModel = myTours.find(\r\n            (tour: TourModel) => tour?._id == metaData.rowData[0]\r\n          ) as TourModel;\r\n          return (\r\n            tour?.tourDate &&\r\n            new Intl.DateTimeFormat(\"en-IN\").format(\r\n              new Date(\r\n                new Date(`${tour?.tourDate}`).setDate(\r\n                  new Date(`${tour?.tourDate}`).getDate() +\r\n                    Number(`${tour?.duration?.days}`)\r\n                )\r\n              )\r\n            )\r\n          );\r\n        },\r\n      },\r\n    },\r\n\r\n    {\r\n      label: \"Location\",\r\n      name: \"tourLocation\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n\r\n    {\r\n      label: \"Status\",\r\n      name: \"status\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n        filterType: \"dropdown\",\r\n        filterOptions: {\r\n          names: [\"completed\", \"Booked\", \"ongoing\"],\r\n\r\n          logic: (value: any, filters: any, data: any) => {\r\n            const tour: any = myTours.find((t) => t?._id == data[0]);\r\n\r\n            const days = tour?.duration?.days ? tour?.duration?.days : 0;\r\n\r\n            const startDate = new Intl.DateTimeFormat(\"en-US\").format(\r\n              new Date(tour?.tourDate)\r\n            );\r\n            const lastDate = new Intl.DateTimeFormat(\"en-US\").format(\r\n              new Date(\r\n                new Date(tour?.tourDate).setDate(\r\n                  new Date(tour?.tourDate).getDate() + Number(days)\r\n                )\r\n              )\r\n            );\r\n            const today = new Intl.DateTimeFormat(\"en-US\").format(\r\n              new Date(Date.now())\r\n            );\r\n\r\n            if (filters.includes(\"completed\")) {\r\n              if (lastDate > today) {\r\n                return data;\r\n              }\r\n            }\r\n\r\n            if (filters.includes(\"ongoing\")) {\r\n              if (!(startDate <= today && today <= lastDate)) {\r\n                return data;\r\n              }\r\n            }\r\n\r\n            if (filters.includes(\"upcoming\")) {\r\n              if (startDate <= today) {\r\n                return data;\r\n              }\r\n            }\r\n          },\r\n        },\r\n\r\n        customBodyRender: (value: any, metaData: any) => {\r\n          const tour: TourModel = myTours.find(\r\n            (tour: TourModel) => tour?._id == metaData.rowData[0]\r\n          ) as TourModel;\r\n          const lastDate = new Date(\r\n            new Date(`${tour?.tourDate}`).setDate(\r\n              new Date(`${tour?.tourDate}`).getDate() +\r\n                Number(`${tour?.duration?.days}`)\r\n            )\r\n          );\r\n          const statusVal =\r\n            tour?.category == \"tour\" &&\r\n            new Date(`${tour?.tourDate}`) > new Date()\r\n              ? \"Booked\"\r\n              : lastDate < new Date()\r\n              ? \"completed\"\r\n              : \"ongoing\";\r\n\r\n          return (\r\n            <>\r\n              {\r\n                <Chip\r\n                  style={{\r\n                    textTransform: \"capitalize\",\r\n                    fontSize: \"1em\",\r\n                    color:\r\n                      statusVal == \"Booked\"\r\n                        ? \"#005e9d\"\r\n                        : statusVal == \"completed\"\r\n                        ? \"#b32800\"\r\n                        : \"#00a300\",\r\n                    backgroundColor: \"#fff\",\r\n                  }}\r\n                  label={statusVal}\r\n                />\r\n              }\r\n            </>\r\n          );\r\n        },\r\n      },\r\n    },\r\n    {\r\n      label: \"Actions\",\r\n      name: \"actions\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n        customBodyRender: (value: number, data: any) => {\r\n          const tour: any = myTours.find((t) => t?._id == data?.rowData[0]);\r\n\r\n          return (\r\n            <Box sx={{ display: \"flex\" }}>\r\n              <IconButton onClick={() => handleView(tour?.packageId as string)}>\r\n                <VisibilityRoundedIcon style={{ color: \"#444\" }} />\r\n              </IconButton>\r\n            </Box>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const options: object = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"standard\",\r\n    enableNestedDataAccess: \".\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadMyTours();\r\n  }, []);\r\n\r\n  return (\r\n    <Container sx={{ mt: 2 }} disableGutters>\r\n      <MUIDataTables\r\n        title={<h3>My Tours</h3>}\r\n        columns={columns as any}\r\n        data={myTours}\r\n        options={options}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MyTours;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 12.5c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'VisibilityRounded');\nexports.default = _default;"],"names":["useState","myTours","setMyTours","navigate","useNavigate","loggedUser","useLocation","pathname","useSelector","selectLoggedUser","columns","label","name","options","filter","sort","customBodyRenderLite","index","customBodyRender","value","metaData","Number","tour","find","_id","rowData","tourDate","Intl","DateTimeFormat","format","Date","now","setDate","getDate","duration","days","filterType","filterOptions","names","logic","filters","data","t","startDate","lastDate","today","includes","statusVal","category","style","textTransform","fontSize","color","backgroundColor","sx","display","onClick","id","packageId","useEffect","UserService","then","res","tours","catch","err","console","error","mt","disableGutters","title","responsive","enableNestedDataAccess","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}